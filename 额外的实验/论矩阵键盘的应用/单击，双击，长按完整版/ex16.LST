C51 COMPILER V9.60.0.0   EX16                                                              03/14/2023 18:22:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EX16
OBJECT MODULE PLACED IN ex16.OBJ
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE ex16.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TAB
                    -S(2)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          
  16                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  17          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF};
  18          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  19          
  20          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  21          unsigned char key_value=0,old_key_value=0;//按键值
  22          unsigned char led_1,led_2,led_3,Led_Flag;
  23          unsigned char ok=0;
  24          unsigned char done=0;
  25          unsigned int chang = 0;
  26          unsigned char times=0;
  27          unsigned char jiesuan=0;
  28          /******函数声明***********************/
  29          void display();
  30          unsigned char Key_Scan(); 
  31          void key_proc_short();
  32          void led_show();
  33          void key_proc_long();
  34          void key_proc_dcl();
  35          /************************************/
  36          
  37          void cls_buzz(void) //关闭蜂鸣器
  38          {
  39   1        P2 = (P2&0x1F|0xA0);
  40   1        P0 = 0x00;
  41   1        P2 &= 0x1F;
  42   1      }
  43          
  44          void cls_led(void)//关闭所有LED
  45          {
  46   1        P2 = ((P2&0x1f)|0x80);
  47   1        P0 = 0xff;  
  48   1        P2 &= 0x1f;
  49   1      }
  50          
  51          //主函数
  52          void main(void)
  53          {  
C51 COMPILER V9.60.0.0   EX16                                                              03/14/2023 18:22:21 PAGE 2   

  54   1        cls_buzz();
  55   1        cls_led();
  56   1        AUXR |= 0x80; //1T模式，IAP15F2K61S2单片机特殊功能寄存器  
  57   1        TMOD &= 0xF0;
  58   1        TL0 = 0xCD; 
  59   1        TH0 = 0xD4; 
  60   1        TF0 = 0;  
  61   1        TR0 = 1;
  62   1        ET0 = 1;
  63   1        EA = 1;   
  64   1          while(1)
  65   1          {
  66   2              //key_proc_short();
  67   2              dspbuf[7] = key_value%10;
  68   2              dspbuf[6] = key_value/10;
  69   2            
  70   2              led_show();
  71   2          }
  72   1      }
  73          
  74          //定时器中断服务函数
  75          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  76          {     
  77   1        static unsigned char intr = 0;
  78   1        static unsigned char b=0;
  79   1        display(); //1ms执行一次
  80   1        if(++intr == 10) 
  81   1        {
  82   2           intr = 0;
  83   2           old_key_value=key_value;
  84   2           key_value=Key_Scan();
  85   2           if(old_key_value<key_value){ok=1;times++;}//短按键或双击，其实应该叫按下检测
  86   2           if(old_key_value>key_value){done=0;}//长按键，其实应该叫松手检测
  87   2        }
  88   1        
  89   1        if(ok==1)
  90   1        {
  91   2            b++;
  92   2            if(b==200){jiesuan=1;b=0;}
  93   2        }
  94   1        
  95   1        if(jiesuan==1)
  96   1        {
  97   2            if(times==2){key_proc_dcl();ok=0;times=0;jiesuan=0;}
  98   2            if(times==1){key_proc_short();ok=0;times=0;jiesuan=0;}
  99   2        }
 100   1        
 101   1        if(key_value!=0)//这个ifelse是长按键部分
 102   1        {
 103   2           chang++;
 104   2           if(chang>1000 & done==0){key_proc_long();}
 105   2        }
 106   1        else{chang=0;}
 107   1      }
 108          
 109          unsigned char Key_Scan(void)
 110          {
 111   1        unsigned int Key_New;
 112   1        unsigned char Key_Value;
 113   1        P3 |= 0x0F;
 114   1        P44 = 0; P42 = 1; P35 = 1; P34 = 1;  // 第一列
 115   1        Key_New = P3 & 0X0F;
C51 COMPILER V9.60.0.0   EX16                                                              03/14/2023 18:22:21 PAGE 3   

 116   1        P44 = 1; P42 = 0; P35 = 1; P34 = 1;  // 第二列
 117   1        Key_New = (Key_New << 4) | (P3 & 0X0F); 
 118   1        P44 = 1; P42 = 1; P35 = 0; P34 = 1;  // 第三列
 119   1        Key_New = (Key_New << 4) | (P3 & 0X0F); 
 120   1        P44 = 1; P42 = 1; P35 = 1; P34 = 0;  // 第四列
 121   1        Key_New = (Key_New << 4) | (P3 & 0X0F); 
 122   1        switch(~Key_New)
 123   1        {
 124   2          case 0x8000: Key_Value = 13; break;
 125   2          case 0x4000: Key_Value = 9; break;
 126   2          case 0x2000: Key_Value = 5; break;
 127   2          case 0x1000: Key_Value = 1; break;    
 128   2          case 0x0800: Key_Value = 14; break;
 129   2          case 0x0400: Key_Value = 10; break;
 130   2          case 0x0200: Key_Value = 6; break;
 131   2          case 0x0100: Key_Value = 2; break;    
 132   2          case 0x0080: Key_Value = 15; break;
 133   2          case 0x0040: Key_Value = 11; break;
 134   2          case 0x0020: Key_Value = 7; break;
 135   2          case 0x0010: Key_Value = 3; break;      
 136   2          case 0x0008: Key_Value = 16; break;
 137   2          case 0x0004: Key_Value = 12; break;
 138   2          case 0x0002: Key_Value = 8; break;
 139   2          case 0x0001: Key_Value = 4; break;      
 140   2          default : Key_Value = 0;
 141   2        }
 142   1        return Key_Value;
 143   1      }
 144          
 145          
 146          //显示函数
 147          void display(void)
 148          {   
 149   1        static unsigned char dspcom = 0;
 150   1        //消除鬼影
 151   1        P0 = 0xff;
 152   1        P2 = ((P2&0x1f)|0xE0); 
 153   1        P2 &= 0x1f;
 154   1        //写位码
 155   1        P0 = 1<<dspcom;
 156   1        P2 = ((P2&0x1f)|0xC0); 
 157   1        P2 &= 0x1f;
 158   1        //写段码
 159   1        P0 = tab[dspbuf[dspcom]]; 
 160   1          P2 = ((P2&0x1f)|0xE0); 
 161   1        P2 &= 0x1f;
 162   1        
 163   1          if(++dspcom == 8){
 164   2              dspcom = 0;
 165   2          }    
 166   1      }
 167          
 168          void key_proc_short()
 169          {
 170   1        switch(key_value)
 171   1        {
 172   2          case 1://选择
 173   2          {
 174   3            led_1=~led_1;
 175   3            break;
 176   3          }
 177   2          case 2://存储
C51 COMPILER V9.60.0.0   EX16                                                              03/14/2023 18:22:21 PAGE 4   

 178   2          {
 179   3            led_2=~led_2;
 180   3            break;
 181   3          }
 182   2          case 3:
 183   2          {
 184   3            led_3=~led_3;
 185   3            break;
 186   3          }
 187   2        }
 188   1      }
 189          
 190          void key_proc_long()
 191          {
 192   1        switch(key_value)
 193   1        {
 194   2          case 4://进入循环之后只做一次
 195   2          {
 196   3            led_2=~led_2;
 197   3            key_value=0;done=1;
 198   3            break;
 199   3          }
 200   2          case 1://进入循环之后一直做
 201   2          {
 202   3            led_1=~led_1;
 203   3            //key_value=0;done=1;
 204   3            break;
 205   3          }
 206   2        }
 207   1      }
 208          
 209          void key_proc_dcl()
 210          {
 211   1        switch(key_value)
 212   1        {
 213   2          case 6://进入循环之后只做一次
 214   2          {
 215   3            led_2=~led_2;
 216   3            //key_value=0;done=1;
 217   3            break;
 218   3          }
 219   2        }
 220   1      }
 221          
 222          void led_show()
 223          {
 224   1          //led1
 225   1          if(led_1!=0)
 226   1          {
 227   2            Led_Flag |= 0x01;
 228   2          }
 229   1          else
 230   1          {
 231   2            Led_Flag &= 0xfe;
 232   2          }
 233   1        
 234   1          //led7
 235   1          if(led_2!=0)
 236   1          {
 237   2            Led_Flag |= 0x40;
 238   2          }
 239   1          else
C51 COMPILER V9.60.0.0   EX16                                                              03/14/2023 18:22:21 PAGE 5   

 240   1          {
 241   2            Led_Flag &= 0xbf;
 242   2          }
 243   1        
 244   1          //led8
 245   1          if(led_3!=0)
 246   1          {
 247   2            Led_Flag |= 0x80;
 248   2          }
 249   1          else
 250   1          {
 251   2            Led_Flag &= 0x7f;
 252   2          }
 253   1          P0 = ~Led_Flag;
 254   1          P2 = ((P2&0x1f)|0x80);
 255   1          P2 &= 0x1f;
 256   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    743    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
