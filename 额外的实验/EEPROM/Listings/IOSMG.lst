C51 COMPILER V9.60.0.0   IOSMG                                                             01/31/2023 15:37:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IOSMG
OBJECT MODULE PLACED IN .\Objects\IOSMG.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE IOSMG.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\IOSMG.lst) TABS(2) OBJECT(.\Objects\IOSMG.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：DS18B20温度传感器实验
   3          * 实验目的：1.掌握单总线通讯基本特点和工作时序
   4          *           2.掌握51单片机模拟单总线时序的程序设计方法
   5          *           3.掌握DS18B20温度传感器的操作方法
   6          * 实验配置：J3跳线配置为IO方式，J5配置为BTN、J2配置为1-3和2-4
   7          * 程序现象：用手触摸温度传感器，数码管显示有变化
   8          * 硬件说明：IAP15F2K61S2@11.0592MHz
   9          * 注意事项：测量精度为1摄氏度
  10          * 日期版本：2019-6-24/V2.0
  11          *******************************************************************************/
  12          
  13          #include "STC15F2K60S2.H"
  14          //#include "reg52.h"  //定义51单片机特殊功能寄存器
  15          #include "absacc.h"
  16          #include "i2c.h"
  17          #include "intrins.h"
  18          
  19          //sfr AUXR = 0x8E;
  20          
  21           
  22          code unsigned char tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
  23          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};//显示缓冲区
  24          unsigned char key_value;
  25          unsigned char start;
  26          
  27          //函数声明
  28          /**********************************/
  29          void display(void);
  30          void cls_buzz();
  31          void cls_led();
  32          void delay();
  33          void read_keyboard(void);
  34          void key_proc();
  35          void delay_200ms();   //@11.0592MHz
  36          /**********************************/
  37          
  38          //主函数
  39          void main(void)
  40          { 
  41   1      
  42   1          cls_buzz();
  43   1          cls_led();   
  44   1          AUXR |= 0x80;
  45   1          TMOD &= 0xF0;
  46   1          TL0 = 0xCD; //1ms,1Tmoshi
  47   1          TH0 = 0xD4; 
  48   1          TF0 = 0;  
  49   1          TR0 = 1;
  50   1          ET0 = 1; 
  51   1          
  52   1          start = read_eeprom(0x00);  //从AT24C02地址0x00中读取数据
  53   1          start++;
  54   1          delay();  //延时10ms
C51 COMPILER V9.60.0.0   IOSMG                                                             01/31/2023 15:37:19 PAGE 2   

  55   1          write_eeprom(0x00,start);  //向AT24C02地址0x00中写入数据
  56   1          delay();
  57   1        
  58   1          EA=1;
  59   1      
  60   1          while(1)
  61   1          {
  62   2            //显示数据更新 
  63   2            //dspbuf[0]=up; 
  64   2      //      read_keyboard();
  65   2      //      key_proc();
  66   2      //      delay_200ms();delay_200ms();delay_200ms();delay_200ms();delay_200ms();
  67   2      //      write_eeprom(0x00,start);  //向AT24C02地址0x00中写入数据
  68   2      //      delay();
  69   2            dspbuf[5]=start/100;
  70   2            dspbuf[6]=start%100/10;      
  71   2            dspbuf[7]=start%100%10; 
  72   2          }
  73   1      }
  74          
  75          //定时器中断服务函数
  76          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  77          {
  78   1          display();
  79   1      }
  80          
  81          void cls_buzz()
  82          {
  83   1        P2 = ((P2&0x1f)|0xA0); 
  84   1        P0 = 0x00;
  85   1        P2 &= 0x1f;
  86   1      }
  87          void cls_led()
  88          {
  89   1        P2 = ((P2&0x1f)|0x80); 
  90   1        P0 = 0xFF;
  91   1        P2 &= 0x1f;
  92   1      }
  93          
  94          void delay()//10ms
  95          {
  96   1          unsigned char i, j;
  97   1      
  98   1          i = 108;
  99   1          j = 145;
 100   1          do
 101   1          {
 102   2            while (--j);
 103   2          } while (--i);
 104   1      }
 105          //显示函数
 106          void display(void)
 107          {   
 108   1        static unsigned char dspcom = 0;
 109   1        P2 = ((P2&0x1f)|0xE0);   //段选573
 110   1        P0 = 0xff;               //消隐段码
 111   1        P2 &= 0x1f; 
 112   1      
 113   1        P0 = 1<<dspcom;          //循环位选
 114   1        P2 = ((P2&0x1f)|0xC0);   //位选573
 115   1        P2 &= 0x1f;
 116   1        
C51 COMPILER V9.60.0.0   IOSMG                                                             01/31/2023 15:37:19 PAGE 3   

 117   1        P0 = tab[dspbuf[dspcom]];//显示段码
 118   1        P2 = ((P2&0x1f)|0xE0);   //段选573
 119   1        P2 &= 0x1f;               
 120   1        
 121   1          if(++dspcom == 8){
 122   2              dspcom = 0;
 123   2          }    
 124   1      }
 125          
 126          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 127          //顺序中的P36和P37引脚
 128          void read_keyboard(void)
 129          {
 130   1          static unsigned char hang;
 131   1        static unsigned char key_state=0; 
 132   1        switch(key_state)
 133   1        {
 134   2          case 0:
 135   2          {
 136   3            P3 = 0x0f; P42 = 0; P44 = 0;
 137   3            if(P3 != 0x0f) //有按键按下
 138   3            key_state=1;  
 139   3          }break;
 140   2          case 1:
 141   2          {
 142   3            P3 = 0x0f; P42 = 0; P44 = 0;
 143   3            if(P3 != 0x0f) //有按键按下
 144   3            {
 145   4              if(P30 == 0)hang = 1;
 146   4              if(P31 == 0)hang = 2;
 147   4              if(P32 == 0)hang = 3;
 148   4              if(P33 == 0)hang = 4;//确定行     
 149   4              switch(hang){
 150   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 151   6                  if(P44 == 0) {key_value=0;key_state=2;}
 152   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 153   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 154   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 155   6                }break;
 156   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 157   6                  if(P44 == 0) {key_value=4;key_state=2;}
 158   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 159   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 160   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 161   6                }break;
 162   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 163   6                  if(P44 == 0) {key_value=8;key_state=2;}
 164   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 165   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 166   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 167   6                }break;
 168   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 169   6                  if(P44 == 0) {key_value=12;key_state=2;}
 170   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 171   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 172   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 173   6                }break;
 174   5              } 
 175   4            }
 176   3            else
 177   3            {
 178   4              key_state=0;  
C51 COMPILER V9.60.0.0   IOSMG                                                             01/31/2023 15:37:19 PAGE 4   

 179   4            }      
 180   3          }break;
 181   2          case 2:     
 182   2          {
 183   3            P3 = 0x0f; P42 = 0; P44 = 0;
 184   3            if(P3 == 0x0f) //按键放开
 185   3            key_state=0;  
 186   3          }break;
 187   2                  
 188   2          } 
 189   1        
 190   1      }
 191          
 192          void key_proc()
 193          {
 194   1          switch(key_value)
 195   1          {
 196   2            case 0:
 197   2            {
 198   3      //        start++;
 199   3      //        write_eeprom(0x00,start);
 200   3      //        delay();
 201   3              key_value=0xff;
 202   3              break;
 203   3            }
 204   2          }
 205   1      }
 206          
 207          void delay_200ms()    //@11.0592MHz
 208          {
 209   1        unsigned char i, j, k;
 210   1      
 211   1        _nop_();
 212   1        _nop_();
 213   1        i = 9;
 214   1        j = 104;
 215   1        k = 139;
 216   1        do
 217   1        {
 218   2          do
 219   2          {
 220   3            while (--k);
 221   3          } while (--j);
 222   2        } while (--i);
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    562    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
