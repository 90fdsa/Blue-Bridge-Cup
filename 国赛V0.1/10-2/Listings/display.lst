C51 COMPILER V9.60.0.0   DISPLAY                                                           06/04/2023 15:33:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN .\Objects\display.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE display.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\display.lst) TABS(2) OBJECT(.\Objects\display.obj)

line level    source

   1          #include "display.h"
   2          
   3          code unsigned char duanma[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,
   4                                       0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xff,
   5                                       0xc6,0xc7,0x8c,0xc8};
   6          //                             C    L    P    N
   7          unsigned char buffer[8]={10,10,10,10,10,10,10,10};
   8          unsigned char weixuan;
   9          
  10          extern unsigned char key_value,old_key_value;
  11          //传过来的测量值
  12          extern float true_temperature;
  13          extern unsigned char distance;
  14          extern unsigned int change_time_of_parameter;
  15          //传过来的参数值
  16          extern char temperature_parameter;
  17          extern char distance_parameter;
  18          
  19          unsigned char show_mod,show_sequence;
  20          
  21          void display()
  22          {
  23   1          P0=0xff;
  24   1          P2=(P2&0x1f)|0xe0;
  25   1          P2&=0x1f;
  26   1        
  27   1          P0=1<<weixuan;
  28   1          P2=(P2&0x1f)|0xc0;
  29   1          P2&=0x1f;
  30   1        
  31   1          P0=duanma[buffer[weixuan]];
  32   1          P2=(P2&0x1f)|0xe0;
  33   1          P2&=0x1f;
  34   1        
  35   1          if(++weixuan==8){weixuan=0;}
  36   1      }
  37          
  38          void fen()
  39          {
  40   1          switch(show_mod)
  41   1          {
  42   2            case 0:
  43   2            {
  44   3               switch(show_sequence)
  45   3               {
  46   4                 case 0:temperature_show();break;
  47   4                 case 1:distance_show();break;
  48   4                 case 2:changetime_show();break;
  49   4               }
  50   3            }break;
  51   2            case 1:
  52   2            {
  53   3                switch(show_sequence)
  54   3                {
C51 COMPILER V9.60.0.0   DISPLAY                                                           06/04/2023 15:33:07 PAGE 2   

  55   4                  case 0:temperature_parameter_show();break;
  56   4                  case 1:distance_parameter_show();break;
  57   4                } 
  58   3            }break;
  59   2          }
  60   1      }
  61          
  62          void temperature_show()
  63          {
  64   1          buffer[0]=22;buffer[1]=10;buffer[2]=10;buffer[3]=10;
  65   1          buffer[4]=((int)(true_temperature*100))/1000;
  66   1          buffer[5]=((int)(true_temperature*100))%1000/100+11;
  67   1          buffer[6]=((int)(true_temperature*100))%100/10;
  68   1          buffer[7]=((int)(true_temperature*100))%10;
  69   1      }
  70          
  71          void distance_show()
  72          {
  73   1          buffer[0]=23;buffer[1]=10;buffer[2]=10;buffer[3]=10;
  74   1          buffer[4]=10;buffer[5]=10;
  75   1          buffer[6]=distance/10;
  76   1          buffer[7]=distance%10;
  77   1      }
  78          
  79          void changetime_show()
  80          {
  81   1          buffer[0]=25;buffer[1]=10;buffer[2]=10;
  82   1          (change_time_of_parameter>10000)?(buffer[3]=change_time_of_parameter/10000):(buffer[3]=10);
  83   1          (change_time_of_parameter>1000)?(buffer[4]=change_time_of_parameter%10000/1000):(buffer[4]=10);
  84   1          (change_time_of_parameter>100)?(buffer[5]=change_time_of_parameter%1000/100):(buffer[5]=10);
  85   1          (change_time_of_parameter>10)?(buffer[6]=change_time_of_parameter%100/10):(buffer[6]=10);
  86   1          buffer[7]=change_time_of_parameter%10;
  87   1      }
  88          
  89          void temperature_parameter_show()
  90          {
  91   1          buffer[0]=24;buffer[1]=10;buffer[2]=10;buffer[3]=1;
  92   1          buffer[4]=10;buffer[5]=10;
  93   1          buffer[6]=temperature_parameter/10;
  94   1          buffer[7]=temperature_parameter%10;
  95   1      }
  96          
  97          void distance_parameter_show()
  98          {
  99   1          buffer[0]=24;buffer[1]=10;buffer[2]=10;buffer[3]=2;
 100   1          buffer[4]=10;buffer[5]=10;
 101   1          buffer[6]=distance_parameter/10;
 102   1          buffer[7]=distance_parameter%10;
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    548    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
