C51 COMPILER V9.54   SHOW                                                                  06/01/2023 16:03:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SHOW
OBJECT MODULE PLACED IN .\Objects\show.obj
COMPILER INVOKED BY: D:\KEIL5_MDK\C51\BIN\C51.EXE show.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\sh
                    -ow.lst) TABS(2) OBJECT(.\Objects\show.obj)

line level    source

   1          #include "show.h"
   2          #include "ds1302.h"
   3          
   4          code unsigned char duanma[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,
   5                                       0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xff,
   6                                       0xbf,0xc6,0x86,0x8c,};
   7                                     //  -    C    E    P
   8          unsigned char buffer[]={10,10,10,10,10,10,10,10};
   9          
  10          unsigned char weixuan;
  11          unsigned char show_mod,show_sequence;
  12          unsigned char hour,minute,second;
  13          
  14          extern float temperature,voltage;
  15          extern unsigned char liangmie;
  16          extern unsigned char led_can;
  17          extern char shi_can,tem_can;
  18          
  19          void display()
  20          {
  21   1          P0=0xff;
  22   1          P2=(P2&0x1f)|0xe0;
  23   1          P2&=0x1f;
  24   1        
  25   1          P0=1<<weixuan;
  26   1          P2=(P2&0x1f)|0xc0;
  27   1          P2&=0x1f;
  28   1         
  29   1          P0=duanma[buffer[weixuan]];
  30   1          P2=(P2&0x1f)|0xe0;
  31   1          P2&=0x1f;
  32   1        
  33   1          if(++weixuan==8){weixuan=0;}
  34   1      }
  35          
  36          void fen()
  37          {
  38   1          switch(show_mod)
  39   1          {
  40   2            case 0:
  41   2            {
  42   3                switch(show_sequence)
  43   3                {
  44   4                  case 0:show_time();break;
  45   4                  case 1:show_temperature();break;
  46   4                  case 2:show_liang();break;
  47   4                }
  48   3            }break;
  49   2            case 1:
  50   2            {
  51   3                switch(show_sequence)
  52   3                {
  53   4                  case 0:show_time_can();break;
  54   4                  case 1:show_temperature_can();break;
C51 COMPILER V9.54   SHOW                                                                  06/01/2023 16:03:51 PAGE 2   

  55   4                  case 2:show_led_can();break;
  56   4                }
  57   3            }break;
  58   2          }
  59   1      }
  60          
  61          void show_time()
  62          {
  63   1          hour=Read_Ds1302_Byte(0x85);
  64   1          minute=Read_Ds1302_Byte(0x83);
  65   1          second=Read_Ds1302_Byte(0x81);
  66   1        
  67   1          hour=hour/16*10+hour%16;
  68   1          minute=minute/16*10+minute%16;
  69   1          second=second/16*10+second%16;
  70   1        
  71   1          buffer[0]=hour/10;buffer[1]=hour%10;
  72   1          buffer[2]=22;
  73   1          buffer[3]=minute/10;buffer[4]=minute%10;
  74   1          buffer[5]=22;
  75   1          buffer[6]=second/10;buffer[7]=second%10;
  76   1      }
  77          
  78          void show_temperature()
  79          {
  80   1          buffer[0]=23;buffer[1]=10;buffer[2]=10;buffer[3]=10;
  81   1          buffer[4]=10;
  82   1          buffer[5]=((int)(temperature*10))/100;
  83   1          buffer[6]=((int)(temperature*10))%100/10+11;
  84   1          buffer[7]=((int)(temperature*10))%10;
  85   1      }
  86          
  87          void show_liang()
  88          {
  89   1          buffer[0]=24;buffer[1]=10;
  90   1          buffer[2]=((int)(voltage*100))/100+11;
  91   1          buffer[3]=((int)(voltage*100))%100/10;
  92   1          buffer[4]=((int)(voltage*100))%10;
  93   1          buffer[5]=10;buffer[6]=10;
  94   1          buffer[7]=liangmie;
  95   1      }
  96          
  97          void show_time_can()
  98          {
  99   1          buffer[0]=25;buffer[1]=1;buffer[2]=10;buffer[3]=10;
 100   1          buffer[4]=10;buffer[5]=10;
 101   1          buffer[6]=shi_can/10;
 102   1          buffer[7]=shi_can%10;
 103   1      }
 104          
 105          void show_temperature_can()
 106          {
 107   1          buffer[0]=25;buffer[1]=2;buffer[2]=10;buffer[3]=10;
 108   1          buffer[4]=10;buffer[5]=10;
 109   1          buffer[6]=tem_can/10;
 110   1          buffer[7]=tem_can%10;
 111   1      }
 112          
 113          void show_led_can()
 114          {
 115   1          buffer[0]=25;buffer[1]=3;buffer[2]=10;buffer[3]=10;
 116   1          buffer[4]=10;buffer[5]=10;buffer[6]=10;
C51 COMPILER V9.54   SHOW                                                                  06/01/2023 16:03:51 PAGE 3   

 117   1          buffer[7]=led_can;
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    578    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
