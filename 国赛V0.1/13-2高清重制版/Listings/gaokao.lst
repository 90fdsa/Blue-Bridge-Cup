C51 COMPILER V9.60.0.0   GAOKAO                                                            06/09/2023 11:00:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GAOKAO
OBJECT MODULE PLACED IN .\Objects\gaokao.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE gaokao.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\gaokao.lst) TABS(2) OBJECT(.\Objects\gaokao.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "init.h"
   3          #include "key.h"
   4          #include "show.h"
   5          #include "iic.h"
   6          #include "ultrasonic.h"
   7          #include "jidianqi.h"
   8          #include "led.h"
   9          
  10          //extern unsigned char buffer[];
  11          extern unsigned char key_value,old_key_value;
  12          //一系列标志位
  13          unsigned char adc_flag,sonic_flag;
  14          //测量量
  15          unsigned int freq,frequency;
  16          unsigned char himid,distance;
  17          //参数
  18          unsigned char himid_can=20;
  19          unsigned char distance_can=50;
  20          unsigned int frequence_can=1500;
  21          //led标记位
  22          extern unsigned char qi1,qi2,qi3,aux1,aux2,aux3;
  23          
  24          void adc_start();
  25          void sonic_start();
  26          void dac_start();
  27          
  28          void main()
  29          {
  30   1          close_buzz();
  31   1          close_led();
  32   1          pcf8591_init();
  33   1          PCA_init();
  34   1          Timer0Init(); 
  35   1          Timer1Init();   //100微秒@12.000MHz
  36   1          Timer2Init();
  37   1          EA=1;
  38   1          while(1)
  39   1          {
  40   2              fen();
  41   2              adc_start();
  42   2              sonic_start();
  43   2              led_pan();
  44   2          }
  45   1      }
  46          
  47          void timer0_proc() interrupt 1
  48          {
  49   1          freq++;
  50   1      }
  51          
  52          void timer1_proc() interrupt 3
  53          {
  54   1          static unsigned char a,ad;
C51 COMPILER V9.60.0.0   GAOKAO                                                            06/09/2023 11:00:27 PAGE 2   

  55   1          static unsigned int fre,son;
  56   1          static unsigned char ok;
  57   1          display();
  58   1          if(++a==10)
  59   1          {
  60   2              a=0;
  61   2              old_key_value=key_value;
  62   2              key_value=read_key();
  63   2              if(old_key_value<key_value){key_proc();}
  64   2              //dac
  65   2              dac_start();
  66   2              jidianqi_go();
  67   2              led();
  68   2              
  69   2          }
  70   1          if(++fre==500){fre=0;frequency=freq*2;freq=0;}
  71   1          if(++ad==50){ad=0;adc_flag=1;}
  72   1          if(++son==300){son=0;sonic_flag=1;}
  73   1          
  74   1          if(qi1==1){if(++ok==100){ok=0;aux1=~aux1;}}else{aux1=0;}
  75   1          if(qi2==1){if(++ok==100){ok=0;aux2=~aux2;}}else{aux2=0;}
  76   1          if(qi3==1){if(++ok==100){ok=0;aux3=~aux3;}}else{aux3=0;}
  77   1      }
  78          
  79          void timer2_proc() interrupt 12
  80          {
  81   1          static unsigned int ji;
  82   1          unsigned char d;
  83   1          if(frequency<frequence_can)
  84   1          {
  85   2              ji++;
  86   2              if(ji<=200)
  87   2              {
  88   3                  d|=0x20;d&=0xbf;
  89   3                  P0=d;
  90   3                  P2=(P2&0x1f)|0xa0;
  91   3                  P2&=0x1f;
  92   3              }
  93   2              else if(ji>200&ji<1000)
  94   2              {
  95   3                  d&=0xdf;d&=0xbf;
  96   3                  P0=d;
  97   3                  P2=(P2&0x1f)|0xa0;
  98   3                  P2&=0x1f;
  99   3              }
 100   2              else if(ji==1000){ji=0;}
 101   2          }
 102   1          else if(frequency>=frequence_can)
 103   1          {
 104   2              ji++;
 105   2              if(ji<=800)
 106   2              {
 107   3                  d|=0x20;d&=0xbf;
 108   3                  P0=d;
 109   3                  P2=(P2&0x1f)|0xa0;
 110   3                  P2&=0x1f;
 111   3              }
 112   2              else if(ji>800&ji<1000)
 113   2              {
 114   3                  d&=0xdf;d&=0xbf;
 115   3                  P0=d;
 116   3                  P2=(P2&0x1f)|0xa0;
C51 COMPILER V9.60.0.0   GAOKAO                                                            06/09/2023 11:00:27 PAGE 3   

 117   3                  P2&=0x1f;
 118   3              }
 119   2              else if(ji==1000){ji=0;}
 120   2          }
 121   1      }
 122          
 123          void adc_start()
 124          {
 125   1         if(adc_flag==1){adc_flag=0;himid=pcf8591_adc()*0.39;}
 126   1      }
 127          
 128          void sonic_start()
 129          {
 130   1         if(sonic_flag==1){sonic_flag=0;distance=sonic();}
 131   1      }
 132          
 133          void dac_start()
 134          {
 135   1        if(himid<himid_can){pcf8591_dac(51);}
 136   1        else if(himid>80){pcf8591_dac(255);}
 137   1        else{pcf8591_dac(51+(204/(80-himid_can))*(himid-himid_can));}
 138   1        
 139   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    622    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
