C51 COMPILER V9.60.0.0   EX9                                                               01/29/2023 16:12:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EX9
OBJECT MODULE PLACED IN ex9.OBJ
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE ex9.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS
                    -(2)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：开机次数存储实验
   3          * 实验目的：1.掌握I2C总线通讯基本特点和工作时序
   4          *           2.掌握51单片机模拟I2C总线时序的程序设计方法
   5          *           3.掌握EEPROM存储器的特性及AT24C02的读写操作方法
   6          * 实验配置：J3跳线配置为MM方式，J5配置为BTN、J2配置为1-3和2-4
   7          * 程序现象：按下复位按键，或重新上电，数码管显示+1
   8          * 硬件环境：IAP15F2K61S2@11.0592MHz
   9          * 注意事项：使用程序时，需要在Preprocessor Symbols 中加入宏定义：EEPROM_AT24C02
  10          * 日期版本：2019-6-24/V2.0
  11          *******************************************************************************/
  12          
  13          #include "reg52.h"  //定义51单片机特殊功能寄存器
  14          #include "i2c.h"    //I2C总线驱动库 
  15          #include "absacc.h"
  16          
  17          sfr AUXR = 0x8E; 
  18          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  19                                       0xff
  20                                     };
  21          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  22          unsigned char dspcom = 0;
  23          
  24          
  25          
  26          void display(void);
  27          
  28          void cls_buzz()
  29          {
  30   1        XBYTE[0xA000] = 0;
  31   1      }
  32          void cls_led()
  33          {
  34   1        XBYTE[0x8000] = 0xFF;
  35   1      }
  36          
  37          
  38          void delay()    //10ms @11.0592MHz
  39          {
  40   1        unsigned char i, j;
  41   1      
  42   1        i = 108;
  43   1        j = 145;
  44   1        do
  45   1        {
  46   2          while (--j);
  47   2        } while (--i);
  48   1      }
  49          
  50          //主函数
  51          void main(void)
  52          { 
  53   1          unsigned char reset_cnt;  //开机次数存储 (最大存储值255)  
  54   1          
C51 COMPILER V9.60.0.0   EX9                                                               01/29/2023 16:12:00 PAGE 2   

  55   1        cls_buzz();cls_led();
  56   1        
  57   1        AUXR |= 0x80;
  58   1        TMOD &= 0xF0;
  59   1        TL0 = 0xCD; 
  60   1        TH0 = 0xD4; 
  61   1        TF0 = 0;  
  62   1        TR0 = 1;
  63   1        ET0 = 1;
  64   1      
  65   1        //write_eeprom(0x00,0x00);  //EEPROM中存储的数据需要进行初始化
  66   1          
  67   1          reset_cnt = read_eeprom(0x00);  //从AT24C02地址0x00中读取数据
  68   1          reset_cnt++;
  69   1          delay();  //延时10ms
  70   1          write_eeprom(0x00,reset_cnt);  //向AT24C02地址0x00中写入数据
  71   1          delay();
  72   1      
  73   1          EA = 1; //数据写入完成后，开机中断
  74   1        
  75   1          //更新显示数据
  76   1          (reset_cnt >= 100)?(dspbuf[5] = reset_cnt/100):(dspbuf[5]=10);       
  77   1          (reset_cnt >= 10)?(dspbuf[6] = reset_cnt%100/10):(dspbuf[6]=10);       
  78   1          dspbuf[7] = reset_cnt%10;       
  79   1          
  80   1          while(1)
  81   1          {
  82   2              ;
  83   2          }
  84   1      }
  85          
  86          //定时器中断服务函数
  87          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  88          {    
  89   1          display();
  90   1      }
  91          
  92          //显示函数
  93          void display(void)
  94          {   
  95   1        XBYTE[0xE000] = 0xff;  //消隐
  96   1        
  97   1        XBYTE[0xC000] = (1<<dspcom);
  98   1          XBYTE[0xE000] = tab[dspbuf[dspcom]]; //段码
  99   1         
 100   1          if(++dspcom == 8){
 101   2              dspcom = 0;
 102   2          }    
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
