C51 COMPILER V9.06   EX16                                                                  06/24/2019 15:31:09 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE EX16
OBJECT MODULE PLACED IN ex16.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ex16.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *                       2.采用状态法进行按键扫描，系统实时性好，
  10          *                       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          
  16                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  17          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF};
  18          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  19          
  20          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  21          unsigned char key_value=0xFF;//按键值
  22          /******函数声明***********************/
  23          void read_keyboard(void);
  24          void display();
  25          /************************************/
  26          
  27          void cls_buzz(void)     //关闭蜂鸣器
  28          {
  29   1              P2 = (P2&0x1F|0xA0);
  30   1              P0 = 0x00;
  31   1              P2 &= 0x1F;
  32   1      }
  33          
  34          void cls_led(void)//关闭所有LED
  35          {
  36   1          P2 = ((P2&0x1f)|0x80);
  37   1              P0 = 0xff;  
  38   1              P2 &= 0x1f;
  39   1      }
  40          
  41          //主函数
  42          void main(void)
  43          {  
  44   1              cls_buzz();
  45   1              cls_led();
  46   1              AUXR |= 0x80;   //1T模式，IAP15F2K61S2单片机特殊功能寄存器      
  47   1              TMOD &= 0xF0;
  48   1              TL0 = 0xCD;     
  49   1              TH0 = 0xD4;     
  50   1              TF0 = 0;        
  51   1              TR0 = 1;
  52   1              ET0 = 1;
  53   1              EA = 1;   
  54   1          while(1)
C51 COMPILER V9.06   EX16                                                                  06/24/2019 15:31:09 PAGE 2   

  55   1          {
  56   2              if(key_flag)
  57   2              {
  58   3                  key_flag = 0;
  59   3                              read_keyboard();
  60   3                              if(key_value != 0xFF){
  61   4                                      dspbuf[7] = key_value%10;
  62   4                                      dspbuf[6] = key_value/10;
  63   4                              }
  64   3              } 
  65   2              
  66   2          }
  67   1      }
  68          
  69          //定时器中断服务函数
  70          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  71          {     
  72   1              static unsigned char intr = 0;
  73   1              display(); //1ms执行一次
  74   1              if(++intr == 10) 
  75   1              {
  76   2              intr = 0;
  77   2                      key_flag = 1;  //10ms按键扫描标志位置1
  78   2          }
  79   1      }
  80          
  81          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
  82          //顺序中的P36和P37引脚
  83          void read_keyboard(void)
  84          {
  85   1          static unsigned char hang;
  86   1              static unsigned char key_state=0;       
  87   1              switch(key_state)
  88   1              {
  89   2                      case 0:
  90   2                      {
  91   3                              P3 = 0x0f; P42 = 0; P44 = 0;
  92   3                              if(P3 != 0x0f) //有按键按下
  93   3                              key_state=1;    
  94   3                      }break;
  95   2                      case 1:
  96   2                      {
  97   3                              P3 = 0x0f; P42 = 0; P44 = 0;
  98   3                              if(P3 != 0x0f) //有按键按下
  99   3                              {
 100   4                                      if(P30 == 0)hang = 1;
 101   4                                      if(P31 == 0)hang = 2;
 102   4                                      if(P32 == 0)hang = 3;
 103   4                                      if(P33 == 0)hang = 4;//确定行       
 104   4                                      switch(hang){
 105   5                                              case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 106   6                                                      if(P44 == 0) {key_value=0;key_state=2;}
 107   6                                                      else if(P42 == 0) {key_value=1;key_state=2;}
 108   6                                                      else if(P35 == 0) {key_value=2;key_state=2;}
 109   6                                                      else if(P34 == 0) {key_value=3;key_state=2;}
 110   6                                              }break;
 111   5                                              case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 112   6                                                      if(P44 == 0) {key_value=4;key_state=2;}
 113   6                                                      else if(P42 == 0) {key_value=5;key_state=2;}
 114   6                                                      else if(P35 == 0) {key_value=6;key_state=2;}
 115   6                                                      else if(P34 == 0) {key_value=7;key_state=2;}
 116   6                                              }break;
C51 COMPILER V9.06   EX16                                                                  06/24/2019 15:31:09 PAGE 3   

 117   5                                              case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 118   6                                                      if(P44 == 0) {key_value=8;key_state=2;}
 119   6                                                      else if(P42 == 0) {key_value=9;key_state=2;}
 120   6                                                      else if(P35 == 0) {key_value=10;key_state=2;}
 121   6                                                      else if(P34 == 0) {key_value=11;key_state=2;}
 122   6                                              }break;
 123   5                                              case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 124   6                                                      if(P44 == 0) {key_value=12;key_state=2;}
 125   6                                                      else if(P42 == 0) {key_value=13;key_state=2;}
 126   6                                                      else if(P35 == 0) {key_value=14;key_state=2;}
 127   6                                                      else if(P34 == 0) {key_value=15;key_state=2;}
 128   6                                              }break;
 129   5                                      }       
 130   4                              }
 131   3                              else
 132   3                              {
 133   4                                      key_state=0;    
 134   4                              }          
 135   3                      }break;
 136   2                      case 2:     
 137   2                      {
 138   3                              P3 = 0x0f; P42 = 0; P44 = 0;
 139   3                              if(P3 == 0x0f) //按键放开
 140   3                              key_state=0;    
 141   3                      }break;
 142   2                                                      
 143   2          } 
 144   1              
 145   1      }
 146          
 147          
 148          //显示函数
 149          void display(void)
 150          {   
 151   1              static unsigned char dspcom = 0;
 152   1              P0 = 0xff;
 153   1              P2 = ((P2&0x1f)|0xE0); 
 154   1              P2 &= 0x1f;
 155   1      
 156   1              P0 = 1<<dspcom;
 157   1              P2 = ((P2&0x1f)|0xC0); 
 158   1              P2 &= 0x1f;
 159   1      
 160   1              P0 = tab[dspbuf[dspcom]];       
 161   1              P2 = ((P2&0x1f)|0xE0); 
 162   1              P2 &= 0x1f;
 163   1        
 164   1          if(++dspcom == 8){
 165   2              dspcom = 0;
 166   2          }    
 167   1      }
 168          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    514    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.06   EX16                                                                  06/24/2019 15:31:09 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
