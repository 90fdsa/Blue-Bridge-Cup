C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Objects\mian.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE mian.c OPTIMIZE(8,SPEED) BROWSE DEFINE(EEPROM_AT24C02)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\mian.lst) TABS(2) OBJECT(.\Objects\mian.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          #include "i2c.h"
  16          #include "intrins.h"
  17          #include "i2c_eeprom.h"
  18                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  19          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF,0xbf,0xc6};
  20          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  21          
  22          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  23          unsigned char key_value=0xFF;//按键值
  24          char up=0;
  25          unsigned int duty=1000;
  26          char k=0;char l=0;
  27          unsigned char lun=1;char ci=10;
  28          char end=0;char start=1;
  29          char mod=0;char step=0;
  30          unsigned char interval=10;
  31          char show=0;
  32          unsigned char adc_value;
  33          char liang;
  34          /******函数声明***********************/
  35          void read_keyboard(void);
  36          void display();
  37          void type1(char i);
  38          void type2(char i);
  39          void type3(char i);
  40          void type4(char i);
  41          void read_keyboard(void);
  42          void key_proc();
  43          void blink(unsigned char a);
  44          void close_display();
  45          void display_liang();
  46          void adc_pan();
  47          void delay();
  48          /************************************/
  49          
  50          void cls_buzz(void) //关闭蜂鸣器
  51          {
  52   1        P2 = (P2&0x1F|0xA0);
  53   1        P0 = 0x00;
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 2   

  54   1        P2 &= 0x1F;
  55   1      }
  56          
  57          void cls_led(void)//关闭所有LED
  58          {
  59   1          P2 = ((P2&0x1f)|0x80);
  60   1        P0 = 0xff;  
  61   1        P2 &= 0x1f;
  62   1      }
  63          
  64          //主函数
  65          void main(void)
  66          {  
  67   1        cls_buzz();
  68   1        cls_led();   
  69   1        AUXR |= 0xC0;
  70   1        TMOD &= 0xFF;
  71   1        TL0 = 0xCD; //1ms,1Tmoshi
  72   1        TH0 = 0xD4; 
  73   1        TF0 = 0;  
  74   1        TR0 = 1;
  75   1        ET0 = 1;
  76   1        TL1=0XF5;
  77   1        TH1=0XFF;
  78   1        TF1 = 0;  
  79   1        TR1 = 0;
  80   1        
  81   1      //  write_eeprom(0x00,lun);
  82   1      //  delay();
  83   1      //  write_eeprom(0x10,interval);
  84   1      //  delay();
  85   1        
  86   1        TR1 = 1;
  87   1        ET1 = 1;
  88   1        
  89   1        lun=read_eeprom(0x00);
  90   1        delay();
  91   1        interval=read_eeprom(0x10);
  92   1        delay();
  93   1        
  94   1        
  95   1        EA = 1; 
  96   1        
  97   1        P2 = ((P2 &0x1f)|0x80);
  98   1        P0=0xff;
  99   1        P2 &= 0x1f;
 100   1      
 101   1        
 102   1        
 103   1        init_pcf8591();  //PCF8591初始化
 104   1        
 105   1        
 106   1        while(1)
 107   1        {
 108   2          read_keyboard();
 109   2          key_proc();
 110   2          adc_pan();
 111   2        }
 112   1      }
 113          
 114          //定时器中断服务函数
 115          void isr_timer_0(void)  interrupt 1  //用于控制灯的亮灭
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 3   

 116          {
 117   1          static unsigned int time;
 118   1          static unsigned int kong=0;
 119   1          static unsigned int jie=0;
 120   1          static unsigned char adc_ce=0;
 121   1          if(++adc_ce==50)
 122   1          {
 123   2            adc_ce=0;
 124   2            adc_value = adc_pcf8591();
 125   2          }
 126   1          if(mod==0)
 127   1          {
 128   2            if(show==1)
 129   2            {display_liang();}
 130   2            else
 131   2            {close_display();}
 132   2            if(end==0&&start==1)
 133   2            {
 134   3              time++;
 135   3              if(time==400)
 136   3              {
 137   4                time=0;
 138   4                k=k+1;
 139   4                if(k==ci)
 140   4                {k=0;}
 141   4              }
 142   3            
 143   3            }
 144   2            else if(end==1)
 145   2            { 
 146   3              k=0;
 147   3              kong++;
 148   3              if(kong==interval*100)
 149   3              {
 150   4                end=0;
 151   4                lun++;
 152   4                if(lun==2)
 153   4                {ci=6;}
 154   4                else if(lun==4)
 155   4                {ci=10;lun=0;}
 156   4                kong=0;
 157   4              }
 158   3            }
 159   2          }
 160   1          else if(mod==1)
 161   1          {
 162   2            if(++jie==800)
 163   2            {
 164   3              jie=0;
 165   3              blink(step);
 166   3            }
 167   2          }
 168   1          display();
 169   1      }
 170          
 171          void isr_timer_1(void)  interrupt 3  //用于调节亮度
 172          {
 173   1          static unsigned int intr;
 174   1          intr++;
 175   1          if(intr <= duty)
 176   1          {
 177   2              P2 = ((P2&0x1f)|0x80);
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 4   

 178   2              if(end==0)
 179   2              {
 180   3                switch(lun)
 181   3                {
 182   4                  case 0:type1(k);break;
 183   4                  case 1:type2(k);break;
 184   4                  case 2:type3(k);break;
 185   4                  case 3:type4(k);break;
 186   4                }
 187   3              }
 188   2              P2 &= 0x1f;
 189   2          }
 190   1          if(intr>duty&&intr<1000)
 191   1          {
 192   2              P2 = ((P2&0x1f)|0x80);
 193   2              P0 = 0xff;  //LED关
 194   2              P2 &= 0x1f;
 195   2          }
 196   1          if(intr==1000)
 197   1          {
 198   2             intr=0;
 199   2          }
 200   1      }
 201          
 202          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 203          //顺序中的P36和P37引脚
 204          void read_keyboard(void)
 205          {
 206   1          static unsigned char hang;
 207   1        static unsigned char key_state=0; 
 208   1        switch(key_state)
 209   1        {
 210   2          case 0:
 211   2          {
 212   3            P3 = 0x0f; P42 = 0; P44 = 0;
 213   3            if(P3 != 0x0f) //有按键按下
 214   3            key_state=1;  
 215   3          }break;
 216   2          case 1:
 217   2          {
 218   3            P3 = 0x0f; P42 = 0; P44 = 0;
 219   3            if(P3 != 0x0f) //有按键按下
 220   3            {
 221   4              if(P30 == 0)hang = 1;
 222   4              if(P31 == 0)hang = 2;
 223   4              if(P32 == 0)hang = 3;
 224   4              if(P33 == 0)hang = 4;//确定行     
 225   4              switch(hang){
 226   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 227   6                  if(P44 == 0) {key_value=0;key_state=2;}
 228   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 229   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 230   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 231   6                }break;
 232   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 233   6                  if(P44 == 0) {key_value=4;key_state=2;}
 234   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 235   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 236   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 237   6                }break;
 238   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 239   6                  if(P44 == 0) {key_value=8;key_state=2;}
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 5   

 240   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 241   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 242   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 243   6                }break;
 244   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 245   6                  if(P44 == 0) {key_value=12;key_state=2;}
 246   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 247   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 248   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 249   6                }break;
 250   5              } 
 251   4            }
 252   3            else
 253   3            {
 254   4              key_state=0;  
 255   4            }      
 256   3          }break;
 257   2          case 2:     
 258   2          {
 259   3            P3 = 0x0f; P42 = 0; P44 = 0;
 260   3            if(P3 == 0x0f) //按键放开
 261   3            key_state=0;  
 262   3          }break;
 263   2                  
 264   2          } 
 265   1        
 266   1      }
 267          
 268          void key_proc()
 269          {
 270   1        switch(key_value)
 271   1        {
 272   2          case 8:
 273   2          {
 274   3            if(start==1)
 275   3            {start=0;}
 276   3            else
 277   3            {start++;}
 278   3            key_value=0xff;
 279   3            break;
 280   3          }
 281   2          case 12:
 282   2          {
 283   3            mod=1;
 284   3            step++;
 285   3            if(step==3)
 286   3            {
 287   4              step=0;
 288   4              mod=0;
 289   4              ET1 = 0;EA=0;
 290   4              write_eeprom(0x00,lun);
 291   4              delay();
 292   4              write_eeprom(0x10,interval);
 293   4              delay();
 294   4              ET1 = 1;EA=1;
 295   4            }
 296   3            key_value=0xff;
 297   3            break;
 298   3          }
 299   2          case 9:
 300   2          {
 301   3            if(mod==1)
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 6   

 302   3            {
 303   4              if(step==1)
 304   4              {
 305   5                lun++;
 306   5                if(lun==4)
 307   5                {lun=0;}
 308   5      
 309   5              }
 310   4              else if(step==2)
 311   4              {
 312   5                interval+=1;
 313   5                if(interval==13)
 314   5                {interval=4;}
 315   5              }
 316   4            }
 317   3      
 318   3            key_value=0xff;
 319   3            break;
 320   3          }
 321   2          case 13:
 322   2          {
 323   3            if(mod==1)
 324   3            {
 325   4              if(step==1)
 326   4              {
 327   5                lun--;
 328   5                if(lun<0)
 329   5                {lun=3;}
 330   5              }
 331   4              else if(step==2)
 332   4              {
 333   5                interval-=1;
 334   5                if(interval<4)
 335   5                {interval=12;}
 336   5              }
 337   4            }
 338   3            if(mod==0)
 339   3            {
 340   4              if(show==1)
 341   4              {show=0;}
 342   4              else
 343   4              {show++;}
 344   4            }
 345   3            key_value=0xff;
 346   3            break;
 347   3          }
 348   2        }
 349   1      }
 350          
 351          //显示函数
 352          void display(void)
 353          {   
 354   1        static unsigned char dspcom = 0;
 355   1        P0 = 0xff;
 356   1        P2 = ((P2&0x1f)|0xE0); 
 357   1        P2 &= 0x1f;
 358   1      
 359   1        P0 = 1<<dspcom;
 360   1        P2 = ((P2&0x1f)|0xC0); 
 361   1        P2 &= 0x1f;
 362   1      
 363   1        P0 = tab[dspbuf[dspcom]]; 
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 7   

 364   1          P2 = ((P2&0x1f)|0xE0); 
 365   1        P2 &= 0x1f;
 366   1        
 367   1          if(++dspcom == 8){
 368   2              dspcom = 0;
 369   2          }    
 370   1      }
 371          
 372          void type1(char i)
 373          {
 374   1        switch(i)
 375   1        {
 376   2          case 0:P0=0xff;break;
 377   2          case 1:P0=0xfe;break;
 378   2          case 2:P0=0xfc;break;
 379   2          case 3:P0=0xf8;break;
 380   2          case 4:P0=0xf0;break;
 381   2          case 5:P0=0xe0;break;
 382   2          case 6:P0=0xc0;break;
 383   2          case 7:P0=0x80;break;
 384   2          case 8:P0=0x00;break;
 385   2          case 9:end=1;break;
 386   2        } 
 387   1      }
 388          
 389          void type2(char i)
 390          {
 391   1        switch(i)
 392   1        {
 393   2          case 0:P0=0xff;break;
 394   2          case 1:P0=0x7f;break;
 395   2          case 2:P0=0x3f;break;
 396   2          case 3:P0=0x1f;break;
 397   2          case 4:P0=0x0f;break;
 398   2          case 5:P0=0x07;break;
 399   2          case 6:P0=0x03;break;
 400   2          case 7:P0=0x01;break;
 401   2          case 8:P0=0x00;break;
 402   2          case 9:end=1;break;
 403   2        } 
 404   1      }
 405          
 406          void type3(char i)
 407          {
 408   1        switch(i)
 409   1        {
 410   2          case 0:P0=0xff;break;
 411   2          case 1:P0=0x7e;break;
 412   2          case 2:P0=0x3c;break;
 413   2          case 3:P0=0x18;break;
 414   2          case 4:P0=0x00;break;
 415   2          case 5:end=1;break;
 416   2        } 
 417   1      }
 418          
 419          void type4(char i)
 420          {
 421   1        switch(i)
 422   1        {
 423   2          case 0:P0=0xff;break;
 424   2          case 1:P0=0xe7;break;
 425   2          case 2:P0=0xc3;break;
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 8   

 426   2          case 3:P0=0x81;break;
 427   2          case 4:P0=0x00;break;
 428   2          case 5:end=1;break;
 429   2        } 
 430   1      }
 431          
 432          void blink(unsigned char a)
 433          {
 434   1        static unsigned char count=0;
 435   1        if(mod==1)
 436   1        {
 437   2          if(a==1)
 438   2          {
 439   3            if(count==0)
 440   3            {
 441   4              dspbuf[0] = 11;dspbuf[1] = 10;dspbuf[2] = 11;dspbuf[3] = 10;
 442   4              dspbuf[4] = (interval*100)/1000;dspbuf[5] = (interval*100)%1000/100;
 443   4              dspbuf[6] = (interval*100)%100/10;dspbuf[7] = (interval*100)%10;
 444   4              count++;
 445   4            }
 446   3            else if(count==1)
 447   3            {
 448   4              dspbuf[0] = 11;dspbuf[1] =lun ;dspbuf[2] = 11;dspbuf[3] = 10;
 449   4              dspbuf[4] = (interval*100)/1000;dspbuf[5] = (interval*100)%1000/100;
 450   4              dspbuf[6] = (interval*100)%100/10;dspbuf[7] = (interval*100)%10;
 451   4              count=0;
 452   4            }
 453   3          }
 454   2          else if(a==2)
 455   2          {
 456   3            if(count==0)
 457   3            {
 458   4              dspbuf[0] = 11;dspbuf[1] =lun ;dspbuf[2] = 11;dspbuf[3] = 10;
 459   4              dspbuf[4] = 10;dspbuf[5] = 10;dspbuf[6] = 10;dspbuf[7] = 10;
 460   4              count++;
 461   4            }
 462   3            else if(count==1)
 463   3            {
 464   4              dspbuf[0] = 11;dspbuf[1] =lun ;dspbuf[2] = 11;dspbuf[3] = 10;
 465   4              dspbuf[4] = (interval*100)/1000;dspbuf[5] = (interval*100)%1000/100;
 466   4              dspbuf[6] = (interval*100)%100/10;dspbuf[7] = (interval*100)%10;
 467   4              count=0;
 468   4            }
 469   3          }
 470   2        } 
 471   1      }
 472          
 473          void close_display()
 474          {
 475   1        dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 10;dspbuf[3] = 10;
 476   1        dspbuf[4] = 10;dspbuf[5] = 10;dspbuf[6] = 10;dspbuf[7] = 10;
 477   1      }
 478          void display_liang()
 479          {
 480   1        dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 10;dspbuf[3] = 10;
 481   1        dspbuf[4] = 10;dspbuf[5] = 10;dspbuf[6] = 11;dspbuf[7] = liang;
 482   1      }
 483          
 484          void adc_pan()
 485          {
 486   1        if(adc_value>=0&&adc_value<=63)
 487   1        {duty=25;liang=1;}
C51 COMPILER V9.60.0.0   MIAN                                                              01/31/2023 14:47:27 PAGE 9   

 488   1        else if(adc_value>=64&&adc_value<=127)
 489   1        {duty=100;liang=2;}
 490   1        else if(adc_value>=128&&adc_value<=191)
 491   1        {duty=500;liang=3;}
 492   1        else
 493   1        {duty=1000;liang=4;}
 494   1      }
 495          
 496          void delay()    //10ms @11.0592MHz
 497          {
 498   1        unsigned char i, j;
 499   1      
 500   1        i = 108;
 501   1        j = 145;
 502   1        do
 503   1        {
 504   2          while (--j);
 505   2        } while (--i);
 506   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1989    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
