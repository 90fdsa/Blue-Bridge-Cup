C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KAOYAN
OBJECT MODULE PLACED IN .\Objects\kaoyan.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE kaoyan.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\kaoyan.lst) TABS(2) OBJECT(.\Objects\kaoyan.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          //#include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          #include "ds1302.h"
  16          #include "i2c.h"
  17                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  18          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF,0xbf};
  19          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  20          
  21          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  22          unsigned char key_value=0xFF;//按键值
  23          unsigned char *p_rtc;
  24          unsigned char clock_setting[6];//用于保存要调整的时间
  25          unsigned char chache[4];
  26          unsigned char clock_flag=1,voltage_flag=1;//决定正常走还是调整时间
  27          unsigned char liangmie=0;
  28          unsigned char time_choose=0,voltage_choose=0,frequency_choose,chache_choose;
  29          //第一个是时间闪烁标志位，第二个是时间修改选择标志位
  30          char hour,minute,second;
  31          extern unsigned char set[6];
  32          unsigned char mod=1;
  33          unsigned char adc_value;
  34          int voltage_now,voltage_old,voltage_high=2000,voltage_low=1000;
  35          unsigned char high,low;
  36          /******函数声明***********************/
  37          void read_keyboard(void);
  38          void display();
  39          void Delay100ms();    //@11.0592MHz
  40          void delay10ms();
  41          void fen();
  42          void clock();
  43          void key_proc();
  44          void blink();
  45          void clock_normal();
  46          void voltage_ce();
  47          void blink_voltage();
  48          void voltage();
  49          void frequency();
  50          void chakan();
  51          /************************************/
  52          
  53          void cls_buzz(void) //关闭蜂鸣器
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 2   

  54          {
  55   1        P2 = (P2&0x1F|0xA0);
  56   1        P0 = 0x00;
  57   1        P2 &= 0x1F;
  58   1      }
  59          
  60          void cls_led(void)//关闭所有LED
  61          {
  62   1          P2 = ((P2&0x1f)|0x80);
  63   1        P0 = 0xff;  
  64   1        P2 &= 0x1f;
  65   1      }
  66          
  67          //主函数
  68          void main(void)
  69          {  
  70   1          cls_buzz();
  71   1          cls_led();
  72   1          AUXR |= 0xc0;
  73   1          TMOD = 0x04;
  74   1        
  75   1          TL0 = 0;  //1ms,1Tmoshi
  76   1          TH0 = 0;  
  77   1          TR0 = 1;
  78   1          
  79   1          TL1 = 0XCD;
  80   1          TH1 = 0XD4;
  81   1          TR1 = 1;
  82   1          ET1 = 1;
  83   1          EA = 1; 
  84   1          
  85   1          Delay100ms();
  86   1          SetRTC(); 
  87   1            
  88   1          init_pcf8591();
  89   1        
  90   1          voltage_high=read_eeprom(0x00)*100;delay10ms();
  91   1          voltage_low=read_eeprom(0x08)*100;delay10ms();
  92   1          chache[0]=read_eeprom(0x10);delay10ms();
  93   1          chache[1]=read_eeprom(0x11);delay10ms();
  94   1          chache[2]=read_eeprom(0x12);delay10ms();
  95   1          chache[3]=read_eeprom(0x13);delay10ms();
  96   1          
  97   1          while(1)
  98   1          {
  99   2              key_proc();
 100   2              fen();
 101   2          }
 102   1      }
 103          
 104          //定时器中断服务函数
 105          void isr_timer_1(void)  interrupt 3  //默认中断优先级 1
 106          {     
 107   1        static unsigned char intr = 0;
 108   1        static unsigned int blin = 0;
 109   1        if(++intr == 10) 
 110   1        {
 111   2           intr = 0;
 112   2           read_keyboard();
 113   2           adc_value=adc_pcf8591();
 114   2           
 115   2           if(voltage_now<voltage_low&&voltage_old>voltage_low)
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 3   

 116   2           {
 117   3              chache[0]=0;
 118   3              chache[1]=p_rtc[0]*10+p_rtc[1];
 119   3              chache[2]=p_rtc[2]*10+p_rtc[3];
 120   3              chache[3]=p_rtc[4]*10+p_rtc[5];
 121   3              write_eeprom(0x10,chache[0]);delay10ms();write_eeprom(0x11,chache[1]);delay10ms();
 122   3              write_eeprom(0x12,chache[2]);delay10ms();write_eeprom(0x13,chache[3]);delay10ms();
 123   3           }
 124   2           if(voltage_now>voltage_high&&voltage_old<voltage_high)
 125   2           {
 126   3              chache[0]=1;
 127   3              chache[1]=p_rtc[0]*10+p_rtc[1];
 128   3              chache[2]=p_rtc[2]*10+p_rtc[3];
 129   3              chache[3]=p_rtc[4]*10+p_rtc[5];
 130   3              write_eeprom(0x10,chache[0]);delay10ms();write_eeprom(0x11,chache[1]);delay10ms();
 131   3              write_eeprom(0x12,chache[2]);delay10ms();write_eeprom(0x13,chache[3]);delay10ms();
 132   3           }
 133   2           voltage_old=voltage_now;
 134   2        }
 135   1        if(++blin == 1000)
 136   1        {
 137   2            blin=0;
 138   2            liangmie=~liangmie;
 139   2              
 140   2            TR0=0;
 141   2            high=TH0;low=TL0;
 142   2            TH0=0;TL0=0;
 143   2            TR0=1;
 144   2        }
 145   1        display(); //1ms执行一次
 146   1      }
 147          
 148          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 149          //顺序中的P36和P37引脚
 150          void read_keyboard(void)
 151          {
 152   1          static unsigned char hang;
 153   1        static unsigned char key_state=0; 
 154   1        switch(key_state)
 155   1        {
 156   2          case 0:
 157   2          {
 158   3            P3 = 0x0f; P42 = 0; P44 = 0;
 159   3            if(P3 != 0x0f) //有按键按下
 160   3            key_state=1;  
 161   3          }break;
 162   2          case 1:
 163   2          {
 164   3            P3 = 0x0f; P42 = 0; P44 = 0;
 165   3            if(P3 != 0x0f) //有按键按下
 166   3            {
 167   4              if(P30 == 0)hang = 1;
 168   4              if(P31 == 0)hang = 2;
 169   4              if(P32 == 0)hang = 3;
 170   4              if(P33 == 0)hang = 4;//确定行     
 171   4              switch(hang){
 172   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 173   6                  if(P44 == 0) {key_value=0;key_state=2;}
 174   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 175   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 176   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 177   6                }break;
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 4   

 178   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 179   6                  if(P44 == 0) {key_value=4;key_state=2;}
 180   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 181   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 182   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 183   6                }break;
 184   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 185   6                  if(P44 == 0) {key_value=8;key_state=2;}
 186   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 187   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 188   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 189   6                }break;
 190   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 191   6                  if(P44 == 0) {key_value=12;key_state=2;}
 192   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 193   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 194   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 195   6                }break;
 196   5              } 
 197   4            }
 198   3            else
 199   3            {
 200   4              key_state=0;  
 201   4            }      
 202   3          }break;
 203   2          case 2:     
 204   2          {
 205   3            P3 = 0x0f; P42 = 0; P44 = 0;
 206   3            if(P3 == 0x0f) //按键放开
 207   3            key_state=0;  
 208   3          }break;
 209   2                  
 210   2          } 
 211   1        
 212   1      }
 213          
 214          
 215          //显示函数
 216          void display(void)
 217          {   
 218   1        static unsigned char dspcom = 0;
 219   1        P0 = 0xff;
 220   1        P2 = ((P2&0x1f)|0xE0); 
 221   1        P2 &= 0x1f;
 222   1      
 223   1        P0 = 1<<dspcom;
 224   1        P2 = ((P2&0x1f)|0xC0); 
 225   1        P2 &= 0x1f;
 226   1      
 227   1        P0 = tab[dspbuf[dspcom]]; 
 228   1          P2 = ((P2&0x1f)|0xE0); 
 229   1        P2 &= 0x1f;
 230   1        
 231   1          if(++dspcom == 8){
 232   2              dspcom = 0;
 233   2          }    
 234   1      }
 235          
 236          void Delay100ms()   //@11.0592MHz
 237          {
 238   1        unsigned char i, j, k;
 239   1      
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 5   

 240   1        _nop_();
 241   1        _nop_();
 242   1        i = 5;
 243   1        j = 52;
 244   1        k = 195;
 245   1        do
 246   1        {
 247   2          do
 248   2          {
 249   3            while (--k);
 250   3          } while (--j);
 251   2        } while (--i);
 252   1      }
 253          
 254          void delay10ms()    //10ms @11.0592MHz
 255          {
 256   1        unsigned char i, j;
 257   1      
 258   1        i = 108;
 259   1        j = 145;
 260   1        do
 261   1        {
 262   2          while (--j);
 263   2        } while (--i);
 264   1      }
 265          
 266          void key_proc()
 267          {
 268   1        static unsigned char count=0;
 269   1      //  static unsigned char count_v=0;
 270   1        switch(key_value)
 271   1        {
 272   2          case 12://S4
 273   2          {
 274   3            if(mod==1)//时间控制
 275   3            {
 276   4                clock_flag=0;
 277   4                count++;
 278   4                if(count==1)
 279   4                {
 280   5                    clock_setting[0]=p_rtc[0];clock_setting[1]=p_rtc[1];clock_setting[2]=p_rtc[2];
 281   5                    clock_setting[3]=p_rtc[3];clock_setting[4]=p_rtc[4];clock_setting[5]=p_rtc[5];
 282   5                    hour=clock_setting[0]*10+clock_setting[1];
 283   5                    minute=clock_setting[2]*10+clock_setting[3];
 284   5                    second=clock_setting[4]*10+clock_setting[5];
 285   5                }
 286   4            
 287   4                time_choose++;
 288   4                if(time_choose==4){time_choose=1;}
 289   4            }
 290   3            else if(mod==2)//电压控制
 291   3            {
 292   4                voltage_flag=0;
 293   4                voltage_choose++;
 294   4                if(voltage_choose==3){voltage_choose=1;}
 295   4            }
 296   3            else if(mod==3)//频率控制
 297   3            {
 298   4                frequency_choose++;
 299   4                if(frequency_choose==3){frequency_choose=1;}
 300   4            }
 301   3            else if(mod==4)//电压查看
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 6   

 302   3            {
 303   4                chache_choose++;
 304   4                if(chache_choose==3){chache_choose=1;}
 305   4            }
 306   3            key_value=0xff;
 307   3            break;
 308   3          }
 309   2          case 0://S7，时间
 310   2          {     
 311   3            mod=1;
 312   3            if(count>=1)
 313   3            {
 314   4              set[0]=hour/10;set[1]=hour%10;set[2]=minute/10;
 315   4              set[3]=minute%10;set[4]=second/10;set[5]=second%10;
 316   4              SetRTC();
 317   4            }
 318   3            clock_flag=1;count=0;
 319   3            key_value=0xff;
 320   3            break;
 321   3          }
 322   2          case 4://S6，电压
 323   2          {
 324   3            mod=2;voltage_flag=1;
 325   3            write_eeprom(0x00,voltage_high/100);
 326   3            write_eeprom(0x08,voltage_low/100);
 327   3            key_value=0xff;
 328   3            break;
 329   3          }
 330   2          case 8://S5，频率
 331   2          {
 332   3            mod=3;frequency_choose=1;
 333   3            key_value=0xff;
 334   3            break;
 335   3          }
 336   2          case 9://S9，查看
 337   2          {
 338   3            mod=4;chache_choose=1;
 339   3            key_value=0xff;
 340   3            break;
 341   3          }
 342   2          case 1://S11，上升
 343   2          {
 344   3            if(mod==1)//时间控制
 345   3            {
 346   4                if(clock_flag==0)
 347   4                {
 348   5                    switch(time_choose)
 349   5                    {
 350   6                        case 1:hour++;if(hour==24){hour=0;}break;
 351   6                        case 2:minute++;if(minute==60){minute=0;}break;
 352   6                        case 3:second++;if(second==60){second=0;}break;
 353   6                    } 
 354   5                }
 355   4            }
 356   3            if(mod==2)
 357   3            {
 358   4                if(voltage_flag==0)
 359   4                {
 360   5                    switch(voltage_choose)
 361   5                    {
 362   6                      case 1:voltage_high+=500;if(voltage_high==10000){voltage_high=9500;}break;
 363   6                      case 2:voltage_low+=500;
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 7   

 364   6                      if(voltage_low==10000){voltage_low=9500;}
 365   6                      if(voltage_low>=voltage_high){voltage_low-=500;}break;
 366   6                    }
 367   5                }
 368   4            }
 369   3            key_value=0xff;
 370   3            break;
 371   3          }
 372   2          case 5://S10，下降
 373   2          {
 374   3            if(mod==1)//时间控制
 375   3            {
 376   4                if(clock_flag==0)
 377   4                {
 378   5                    switch(time_choose)
 379   5                    {
 380   6                        case 1:hour--;if(hour<0){hour=23;}break;
 381   6                        case 2:minute--;if(minute<0){minute=59;}break;
 382   6                        case 3:second--;if(second<0){second=59;}break;
 383   6                    } 
 384   5                }
 385   4            }
 386   3            if(mod==2)
 387   3            {
 388   4                if(voltage_flag==0)
 389   4                {
 390   5                    switch(voltage_choose)
 391   5                    {
 392   6                      case 1:voltage_high-=500;
 393   6                      if(voltage_high<0){voltage_high=0;}
 394   6                      if(voltage_high<=voltage_low){voltage_high+=500;}break;
 395   6                      case 2:voltage_low-=500;if(voltage_low<0){voltage_low=0;}break;
 396   6                    }
 397   5                }
 398   4            }
 399   3            key_value=0xff;
 400   3            break;
 401   3          }
 402   2          
 403   2        }
 404   1      }
 405          void fen()
 406          {
 407   1          switch(mod)
 408   1          {
 409   2            case 1:clock();break;
 410   2            case 2:voltage();break;
 411   2            case 3:frequency();break;
 412   2            case 4:chakan();break;
 413   2          }
 414   1      }
 415          
 416          void clock()
 417          {
 418   1         if(clock_flag==1){clock_normal();}
 419   1         else{blink();}
 420   1      }
 421          
 422          void clock_normal()
 423          {
 424   1          p_rtc = ReadRTC();  
 425   1          dspbuf[0] = p_rtc[0];
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 8   

 426   1          dspbuf[1] = p_rtc[1];
 427   1          dspbuf[2] = 11;
 428   1          dspbuf[3] = p_rtc[2];
 429   1          dspbuf[4] = p_rtc[3];
 430   1          dspbuf[5] = 11;
 431   1          dspbuf[6] = p_rtc[4];
 432   1          dspbuf[7] = p_rtc[5];
 433   1      }
 434          
 435          void blink()
 436          {
 437   1          if(time_choose==1)
 438   1          {
 439   2              if(liangmie==0)
 440   2              {
 441   3                  dspbuf[0] = hour/10;dspbuf[1] = hour%10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 442   3                  dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 443   3              }
 444   2              else
 445   2              {
 446   3                  dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 447   3                  dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 448   3              }
 449   2          }
 450   1          if(time_choose==2)
 451   1          {
 452   2              if(liangmie==0)
 453   2              {
 454   3                  dspbuf[0] = hour/10;dspbuf[1] = hour%10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 455   3                  dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 456   3              }
 457   2              else
 458   2              {
 459   3                  dspbuf[0] = hour/10;dspbuf[1] = hour%10;dspbuf[2] = 11;dspbuf[3] = 10;
 460   3                  dspbuf[4] = 10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 461   3              }
 462   2          }
 463   1          if(time_choose==3)
 464   1          {
 465   2              if(liangmie==0)
 466   2              {
 467   3                  dspbuf[0] = hour/10;dspbuf[1] = hour%10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 468   3                  dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 469   3              }
 470   2              else
 471   2              {
 472   3                  dspbuf[0] = hour/10;dspbuf[1] = hour%10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 473   3                  dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = 10;dspbuf[7] = 10;
 474   3              }
 475   2          }
 476   1      }
 477          
 478          void voltage()
 479          {
 480   1          if(voltage_flag==1){voltage_ce();}
 481   1          else{blink_voltage();}
 482   1      }
 483          
 484          void voltage_ce()
 485          {
 486   1          float a=19.6;
 487   1          voltage_now=a*adc_value;
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 9   

 488   1          dspbuf[0] = 11;dspbuf[1] = 1;dspbuf[2] = 11;dspbuf[3] = 10;
 489   1          dspbuf[4] = voltage_now/1000;
 490   1          dspbuf[5] = voltage_now%1000/100;
 491   1          dspbuf[6] = voltage_now%100/10;
 492   1          dspbuf[7] = voltage_now%10;
 493   1      }
 494          
 495          void blink_voltage()
 496          {
 497   1          if(voltage_choose==1)
 498   1          {
 499   2              if(liangmie==0)
 500   2              {
 501   3                  dspbuf[0] = voltage_high/1000;dspbuf[1] = voltage_high%1000/100;
 502   3                  dspbuf[2] = voltage_high%100/10;dspbuf[3] = voltage_high%10;
 503   3                  dspbuf[4] = voltage_low/1000;dspbuf[5] = voltage_low%1000/100;
 504   3                  dspbuf[6] = voltage_low%100/10;dspbuf[7] = voltage_low%10;
 505   3              }
 506   2              else
 507   2              {
 508   3                  dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 10;dspbuf[3] = 10;
 509   3                  dspbuf[4] = voltage_low/1000;dspbuf[5] = voltage_low%1000/100;
 510   3                  dspbuf[6] = voltage_low%100/10;dspbuf[7] = voltage_low%10;
 511   3              }
 512   2          }
 513   1          if(voltage_choose==2)
 514   1          {
 515   2              if(liangmie==0)
 516   2              {
 517   3                  dspbuf[0] = voltage_high/1000;dspbuf[1] = voltage_high%1000/100;
 518   3                  dspbuf[2] = voltage_high%100/10;dspbuf[3] = voltage_high%10;
 519   3                  dspbuf[4] = voltage_low/1000;dspbuf[5] = voltage_low%1000/100;
 520   3                  dspbuf[6] = voltage_low%100/10;dspbuf[7] = voltage_low%10;
 521   3              }
 522   2              else
 523   2              {
 524   3                  dspbuf[0] = voltage_high/1000;dspbuf[1] = voltage_high%1000/100;
 525   3                  dspbuf[2] = voltage_high%100/10;dspbuf[3] = voltage_high%10;
 526   3                  dspbuf[4] = 10;dspbuf[5] = 10;dspbuf[6] = 10;dspbuf[7] = 10;
 527   3              }
 528   2          }
 529   1      }
 530          
 531          void frequency()
 532          {
 533   1          unsigned int high_high,high_low,low_high,low_low;
 534   1          float frequency_stand;
 535   1          float period;
 536   1          high_high=(high&0xf0)>>4;
 537   1          high_low=high&0x0f;
 538   1          low_high=(low&0xf0)>>4;
 539   1          low_low=(low&0x0f);
 540   1        
 541   1          frequency_stand=(high_high*16*16*16+high_low*16*16+low_high*16+low_low);
 542   1          period=(1/frequency_stand)*1000000;
 543   1          
 544   1          if(frequency_choose==1)
 545   1          {
 546   2               dspbuf[0] = 11;dspbuf[1] = 2;dspbuf[2] = 11; 
 547   2               dspbuf[3] = ((int)frequency_stand)/10000;
 548   2               dspbuf[4] = ((int)frequency_stand)%10000/1000;
 549   2               dspbuf[5] = ((int)frequency_stand)%1000/100;
C51 COMPILER V9.60.0.0   KAOYAN                                                            02/23/2023 21:06:16 PAGE 10  

 550   2               dspbuf[6] = ((int)frequency_stand)%100/10;
 551   2               dspbuf[7] = ((int)frequency_stand)%10;
 552   2          }
 553   1          else if(frequency_choose==2)
 554   1          {
 555   2               dspbuf[0] = 11;dspbuf[1] = 2;dspbuf[2] = 11;
 556   2               dspbuf[3] = ((int)period)/10000;
 557   2               dspbuf[4] = ((int)period)%10000/1000;
 558   2               dspbuf[5] = ((int)period)%1000/100;
 559   2               dspbuf[6] = ((int)period)%100/10;
 560   2               dspbuf[7] = ((int)period)%10;
 561   2          }
 562   1      }
 563          
 564          void chakan()
 565          {
 566   1          if(chache_choose==1)
 567   1          {
 568   2               dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 10; 
 569   2               dspbuf[3] = 10;dspbuf[4] = 10;dspbuf[5] = 10;
 570   2               dspbuf[6] = chache[0]/10;
 571   2               dspbuf[7] = chache[0]%10;
 572   2          }
 573   1          else if(chache_choose==2)
 574   1          {
 575   2               dspbuf[0] = chache[1]/10;
 576   2               dspbuf[1] = chache[1]%10;
 577   2               dspbuf[2] = 11;
 578   2               dspbuf[3] = chache[2]/10;
 579   2               dspbuf[4] = chache[2]%10;
 580   2               dspbuf[5] = 11;
 581   2               dspbuf[6] = chache[3]/10;
 582   2               dspbuf[7] = chache[3]%10;
 583   2          }
 584   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3245    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
