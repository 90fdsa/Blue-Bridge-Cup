C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE QUNZHU
OBJECT MODULE PLACED IN .\Objects\qunzhu.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE qunzhu.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\qunzhu.lst) TABS(2) OBJECT(.\Objects\qunzhu.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          #include "i2c.h"
  16          #include "intrins.h"
  17                                     //  0    1    2    3    4    5    6    7    8    9  熄灭
  18          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF,
  19                                       0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xff,
  20                                       0xc1,0x8e};
  21          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  22          
  23          sbit L1 = P0^0;
  24          sbit L2 = P0^1;
  25          sbit L3 = P0^2;
  26          sbit L4 = P0^3;
  27          sbit L5 = P0^4;
  28          
  29          bit key_flag = 0;//按键扫描标志位 
  30          unsigned char key_value=0xFF;//按键值
  31          unsigned char small_mod=0;
  32          unsigned char adc_value;
  33          unsigned char dac_value=104;
  34          unsigned char high,low;
  35          unsigned char dac_mod=0;
  36          unsigned int frequency=0;
  37          unsigned int frequency_stand=0;
  38          unsigned char key_led=1;
  39          unsigned char led_c=0,smg_c=0;
  40          
  41          /******函数声明***********************/
  42          void read_keyboard(void);
  43          void display();
  44          void key_proc();
  45          void fen();
  46          void deal_adc();
  47          void deal_F();
  48          void LED(unsigned char a);
  49          void how_to_display();
  50          void smg_off();
  51          void LED_off();
  52          /************************************/
  53          
  54          void cls_buzz(void) //关闭蜂鸣器
C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 2   

  55          {
  56   1        P2 = (P2&0x1F|0xA0);
  57   1        P0 = 0x00;
  58   1        P2 &= 0x1F;
  59   1      }
  60          
  61          void cls_led(void)//关闭所有LED
  62          {
  63   1          P2 = ((P2&0x1f)|0x80);
  64   1        P0 = 0xff;  
  65   1        P2 &= 0x1f;
  66   1      }
  67          
  68          //主函数
  69          void main(void)
  70          {  
  71   1        cls_buzz();
  72   1        cls_led();
  73   1        AUXR |= 0xC0; //1T模式，IAP15F2K61S2单片机特殊功能寄存器  
  74   1        TMOD = 0x04;
  75   1        TL0 = 0;  
  76   1        TH0 = 0;
  77   1        TR0 = 1;
  78   1        
  79   1        TL1 = 0xCD; 
  80   1        TH1 = 0xD4;   
  81   1        TR1 = 1;
  82   1        ET1 = 1;
  83   1        
  84   1        EA = 1;  
  85   1        init_pcf8591();
  86   1        
  87   1      //  P2 = ((P2&0x1f)|0x80);
  88   1      //  P0 = 0xff;  //LED关
  89   1      //  P2 &= 0x1f;
  90   1        
  91   1        while(1)
  92   1        {
  93   2            read_keyboard();
  94   2            key_proc();
  95   2            fen();
  96   2        }
  97   1      }       
  98          
  99          
 100          //定时器中断服务函数
 101          void isr_timer_1(void)  interrupt 3  //默认中断优先级 1
 102          {     
 103   1        static unsigned char intr=0;
 104   1        static unsigned int pluse=0;
 105   1        display(); //1ms执行一次
 106   1        dac_pcf8591(dac_value);
 107   1        if(++intr==100)
 108   1        {
 109   2          intr=0;
 110   2          adc_value=adc_pcf8591();
 111   2        }
 112   1        if(++pluse==1000)
 113   1        {
 114   2          pluse=0;
 115   2          TR0=0;
 116   2          high=TH0;low=TL0;
C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 3   

 117   2          TH0=0;TL0=0;
 118   2          TR0=1;
 119   2        }
 120   1      }
 121          
 122          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 123          //顺序中的P36和P37引脚
 124          void read_keyboard(void)
 125          {
 126   1          static unsigned char hang;
 127   1        static unsigned char key_state=0; 
 128   1        switch(key_state)
 129   1        {
 130   2          case 0:
 131   2          {
 132   3            P3 = 0x0f; P42 = 0; P44 = 0;
 133   3            if(P3 != 0x0f) //有按键按下
 134   3            key_state=1;  
 135   3          }break;
 136   2          case 1:
 137   2          {
 138   3            P3 = 0x0f; P42 = 0; P44 = 0;
 139   3            if(P3 != 0x0f) //有按键按下
 140   3            {
 141   4              if(P30 == 0)hang = 1;
 142   4              if(P31 == 0)hang = 2;
 143   4              if(P32 == 0)hang = 3;
 144   4              if(P33 == 0)hang = 4;//确定行     
 145   4              switch(hang){
 146   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 147   6                  if(P44 == 0) {key_value=0;key_state=2;}
 148   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 149   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 150   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 151   6                }break;
 152   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 153   6                  if(P44 == 0) {key_value=4;key_state=2;}
 154   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 155   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 156   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 157   6                }break;
 158   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 159   6                  if(P44 == 0) {key_value=8;key_state=2;}
 160   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 161   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 162   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 163   6                }break;
 164   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 165   6                  if(P44 == 0) {key_value=12;key_state=2;}
 166   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 167   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 168   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 169   6                }break;
 170   5              } 
 171   4            }
 172   3            else
 173   3            {
 174   4              key_state=0;  
 175   4            }      
 176   3          }break;
 177   2          case 2:     
 178   2          {
C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 4   

 179   3            P3 = 0x0f; P42 = 0; P44 = 0;
 180   3            if(P3 == 0x0f) //按键放开
 181   3            key_state=0;  
 182   3          }break;
 183   2                  
 184   2          } 
 185   1        
 186   1      }
 187          
 188          void key_proc()
 189          {
 190   1        switch(key_value)
 191   1        {
 192   2          case 8:
 193   2          {
 194   3            dac_mod=~dac_mod;
 195   3            if(dac_mod==0)
 196   3            {dac_value=104;}
 197   3            else
 198   3            {dac_value=adc_value;}
 199   3            key_value=0xff;
 200   3            break;
 201   3          }
 202   2          case 12:
 203   2          {
 204   3            small_mod=~small_mod;
 205   3            key_value=0xff;
 206   3            break;
 207   3          }
 208   2          case 9:
 209   2          {
 210   3            led_c=~led_c;
 211   3            key_value=0xff;
 212   3            break;
 213   3          }
 214   2          case 13:
 215   2          {
 216   3            smg_c=~smg_c;
 217   3            key_value=0xff;
 218   3            break;
 219   3          }
 220   2        }
 221   1      }
 222          //显示函数
 223          void display(void)
 224          {   
 225   1        static unsigned char dspcom = 0;
 226   1        P0 = 0xff;
 227   1        P2 = ((P2&0x1f)|0xE0); 
 228   1        P2 &= 0x1f;
 229   1      
 230   1        P0 = 1<<dspcom;
 231   1        P2 = ((P2&0x1f)|0xC0); 
 232   1        P2 &= 0x1f;
 233   1      
 234   1        P0 = tab[dspbuf[dspcom]]; 
 235   1          P2 = ((P2&0x1f)|0xE0); 
 236   1        P2 &= 0x1f;
 237   1        
 238   1          if(++dspcom == 8){
 239   2              dspcom = 0;
 240   2          }    
C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 5   

 241   1      }
 242          
 243          void fen()
 244          {
 245   1          if(small_mod==0)
 246   1          {
 247   2              deal_adc();
 248   2              if(led_c==0)
 249   2              {LED(key_led);}
 250   2              else
 251   2              {LED_off();}
 252   2              
 253   2          }
 254   1          else
 255   1          {   
 256   2              deal_F();
 257   2              if(led_c==0)
 258   2              {LED(key_led);}
 259   2              else
 260   2              {LED_off();}
 261   2          }
 262   1      }
 263          
 264          void deal_adc()//写的略有麻烦
 265          {
 266   1          float voltage;
 267   1          int voltage100;
 268   1          unsigned char ge,dianyi,dianer;
 269   1          voltage=adc_value*0.0196;
 270   1          voltage100=voltage*100;
 271   1          ge=voltage100/100;
 272   1          dianyi=voltage100%100/10;
 273   1          dianer=voltage100%10;
 274   1          
 275   1          key_led=1;
 276   1          if(dac_mod!=0)
 277   1          {key_led+=2;}
 278   1          if((voltage>=1.5&&voltage<2.5)||(voltage>=3.5))
 279   1          {key_led++;}
 280   1          
 281   1          if(smg_c==0)
 282   1          {
 283   2              dspbuf[0]=22;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;dspbuf[4]=10;
 284   2              dspbuf[5]=(ge+11);dspbuf[6]=dianyi;dspbuf[7]=dianer;
 285   2          }
 286   1          else
 287   1          {smg_off();}
 288   1          
 289   1      }
 290          
 291          void deal_F()//写的略有麻烦
 292          {
 293   1          unsigned int high_high,high_low,low_high,low_low;
 294   1       
 295   1          high_high=(high&0xf0)>>4;
 296   1          high_low=high&0x0f;
 297   1          low_high=(low&0xf0)>>4;
 298   1          low_low=(low&0x0f);
 299   1          frequency_stand=(high_high*16*16*16+high_low*16*16+low_high*16+low_low);
 300   1          
 301   1        
 302   1          key_led=5;
C51 COMPILER V9.60.0.0   QUNZHU                                                            02/06/2023 11:25:05 PAGE 6   

 303   1          if((frequency_stand>=1000&&frequency_stand<5000)||(frequency_stand>=10000))
 304   1          {key_led++;}
 305   1        
 306   1          if(smg_c==0)
 307   1          {
 308   2              dspbuf[0]=23;
 309   2              dspbuf[1]=10;
 310   2              dspbuf[2]=10;
 311   2              (frequency_stand>=10000)?(dspbuf[3]=frequency_stand/10000):(dspbuf[3]=10);
 312   2              (frequency_stand>=1000)?(dspbuf[4]=frequency_stand%10000/1000):(dspbuf[4]=10);
 313   2              (frequency_stand>=100)?(dspbuf[5]=frequency_stand%1000/100):(dspbuf[5]=10);
 314   2              dspbuf[6]=frequency_stand%100/10;
 315   2              dspbuf[7]=frequency_stand%10;
 316   2          }
 317   1          else
 318   1          {smg_off();}
 319   1        
 320   1          
 321   1      }
 322          
 323          
 324          void LED(unsigned char a)
 325          {
 326   1          P2 = ((P2&0x1f)|0x80);
 327   1          switch(a)
 328   1          {
 329   2            case 1:P0 = 0xfe;break;
 330   2            case 2:P0 = 0xfa;break;
 331   2            case 3:P0 = 0xee;break;
 332   2            case 4:P0 = 0xea;break;
 333   2            case 5:P0 = 0xfd;break;
 334   2            case 6:P0 = 0xf3;break;
 335   2          }
 336   1          P2 &= 0x1f;
 337   1      }
 338          
 339          void LED_off()
 340          {
 341   1          P2 = ((P2&0x1f)|0x80);
 342   1          P0 = 0xff;
 343   1          P2 &= 0x1f;
 344   1      }
 345          
 346          void smg_off()
 347          {
 348   1          dspbuf[0]=10;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;
 349   1          dspbuf[4]=10;dspbuf[5]=10;dspbuf[6]=10;dspbuf[7]=10;
 350   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1238    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
