C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HANBERGER
OBJECT MODULE PLACED IN .\Objects\hanberger.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE hanberger.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\hanberger.lst) TABS(2) OBJECT(.\Objects\hanberger.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          #include "i2c.h"
  16          
  17                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  18          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF,
  19                                       0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10,0xff,
  20                                       0xc1,0x8C,0xab};
  21                                     //  U   P    n
  22          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  23          
  24          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  25          unsigned char key_value=0xFF;//按键值
  26          unsigned char adc_value;
  27          unsigned char mod=1;
  28          float voltage_standard=3;
  29          unsigned char voltage_standard10;
  30          float voltage;
  31          unsigned char count=0;
  32          unsigned char error=0;
  33          unsigned char key_led=0;
  34          /******函数声明***********************/
  35          void read_keyboard(void);
  36          void display();
  37          void deal_adc();
  38          void key_proc();
  39          void fen();
  40          void zhunze();
  41          void jishu();
  42          void error_led(unsigned char a);
  43          void led_pan();
  44          /************************************/
  45          
  46          void cls_buzz(void) //关闭蜂鸣器
  47          {
  48   1        P2 = (P2&0x1F|0xA0);
  49   1        P0 = 0x00;
  50   1        P2 &= 0x1F;
  51   1      }
  52          
  53          void cls_led(void)//关闭所有LED
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 2   

  54          {
  55   1          P2 = ((P2&0x1f)|0x80);
  56   1        P0 = 0xff;  
  57   1        P2 &= 0x1f;
  58   1      }
  59          
  60          //主函数
  61          void main(void)
  62          {  
  63   1        cls_buzz();
  64   1        cls_led();
  65   1        AUXR |= 0x80; //1T模式，IAP15F2K61S2单片机特殊功能寄存器  
  66   1        TMOD &= 0xF0;
  67   1        TL0 = 0xCD; 
  68   1        TH0 = 0xD4; 
  69   1        TF0 = 0;  
  70   1        TR0 = 1;
  71   1        ET0 = 1;
  72   1        EA = 1;   
  73   1        init_pcf8591();
  74   1        voltage_standard10=read_eeprom(0x00);
  75   1        voltage_standard=((float)voltage_standard10)/10;
  76   1          
  77   1        while(1)
  78   1        {
  79   2            read_keyboard();
  80   2            key_proc();
  81   2            fen();
  82   2            led_pan();
  83   2            error_led(key_led);
  84   2        }         
  85   1      }
  86          
  87          //定时器中断服务函数
  88          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  89          {     
  90   1        static unsigned char intr = 0;
  91   1        static float voltage_old=0;
  92   1        static unsigned int dingshi = 0;
  93   1        display(); //1ms执行一次
  94   1        if(++intr == 10) 
  95   1        {
  96   2            intr=0;
  97   2            adc_value=adc_pcf8591();
  98   2            voltage=adc_value*0.0196;
  99   2            if((voltage_old>voltage_standard)&&(voltage<voltage_standard))
 100   2            {count++;}
 101   2            voltage_old=voltage;
 102   2        }
 103   1        if(voltage_old<voltage_standard)
 104   1        {
 105   2            dingshi++;
 106   2            if(dingshi>=5000)
 107   2            {
 108   3                key_led=1;
 109   3                dingshi=5000;
 110   3            }
 111   2        }
 112   1        else
 113   1        {
 114   2            dingshi=0;
 115   2            key_led=0;
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 3   

 116   2        }
 117   1      }
 118          
 119          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 120          //顺序中的P36和P37引脚
 121          void read_keyboard(void)
 122          {
 123   1          static unsigned char hang;
 124   1        static unsigned char key_state=0; 
 125   1        switch(key_state)
 126   1        {
 127   2          case 0:
 128   2          {
 129   3            P3 = 0x0f; P42 = 0; P44 = 0;
 130   3            if(P3 != 0x0f) //有按键按下
 131   3            key_state=1;  
 132   3          }break;
 133   2          case 1:
 134   2          {
 135   3            P3 = 0x0f; P42 = 0; P44 = 0;
 136   3            if(P3 != 0x0f) //有按键按下
 137   3            {
 138   4              if(P30 == 0)hang = 1;
 139   4              if(P31 == 0)hang = 2;
 140   4              if(P32 == 0)hang = 3;
 141   4              if(P33 == 0)hang = 4;//确定行     
 142   4              switch(hang){
 143   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 144   6                  if(P44 == 0) {key_value=0;key_state=2;}
 145   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 146   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 147   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 148   6                }break;
 149   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 150   6                  if(P44 == 0) {key_value=4;key_state=2;}
 151   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 152   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 153   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 154   6                }break;
 155   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 156   6                  if(P44 == 0) {key_value=8;key_state=2;}
 157   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 158   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 159   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 160   6                }break;
 161   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 162   6                  if(P44 == 0) {key_value=12;key_state=2;}
 163   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 164   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 165   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 166   6                }break;
 167   5              } 
 168   4            }
 169   3            else
 170   3            {
 171   4              key_state=0;  
 172   4            }      
 173   3          }break;
 174   2          case 2:     
 175   2          {
 176   3            P3 = 0x0f; P42 = 0; P44 = 0;
 177   3            if(P3 == 0x0f) //按键放开
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 4   

 178   3            key_state=0;  
 179   3          }break;
 180   2                  
 181   2          } 
 182   1        
 183   1      }
 184          
 185          
 186          //显示函数
 187          void display(void)
 188          {   
 189   1        static unsigned char dspcom = 0;
 190   1        P0 = 0xff;
 191   1        P2 = ((P2&0x1f)|0xE0); 
 192   1        P2 &= 0x1f;
 193   1      
 194   1        P0 = 1<<dspcom;
 195   1        P2 = ((P2&0x1f)|0xC0); 
 196   1        P2 &= 0x1f;
 197   1      
 198   1        P0 = tab[dspbuf[dspcom]]; 
 199   1          P2 = ((P2&0x1f)|0xE0); 
 200   1        P2 &= 0x1f;
 201   1        
 202   1          if(++dspcom == 8){
 203   2              dspcom = 0;
 204   2          }    
 205   1      }
 206          
 207          void key_proc()
 208          {
 209   1        switch(key_value)
 210   1        {
 211   2          case 14://S12
 212   2          {
 213   3            error=0;
 214   3            mod++;
 215   3            if(mod==4)
 216   3            {
 217   4              mod=1;
 218   4              voltage_standard10=voltage_standard*10;
 219   4              write_eeprom(0X00,voltage_standard10);
 220   4            }
 221   3            key_value=0xff;
 222   3            break;
 223   3          }
 224   2          case 10://S13
 225   2          {
 226   3            if(mod==3)
 227   3            {
 228   4              error=0;
 229   4              count=0;
 230   4            }
 231   3            else
 232   3            {error++;}
 233   3            key_value=0xff;
 234   3            break;
 235   3          }
 236   2          case 15://S16,加
 237   2          {
 238   3            if(mod==2)
 239   3            {
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 5   

 240   4                error=0;
 241   4                voltage_standard+=0.5;
 242   4                if(voltage_standard>5)
 243   4                {voltage_standard=0;}
 244   4            }
 245   3            else
 246   3            {error++;}
 247   3            key_value=0xff;
 248   3            break;
 249   3          }
 250   2          case 11://S17
 251   2          {
 252   3            if(mod==2)
 253   3            {
 254   4                error=0;
 255   4                voltage_standard-=0.5;
 256   4                if(voltage_standard<0)
 257   4                {voltage_standard=5;}
 258   4            }
 259   3            else
 260   3            {error++;}
 261   3            key_value=0xff;
 262   3            break;
 263   3          }
 264   2        }
 265   1      }
 266          
 267          void deal_adc()//写的略有麻烦
 268          {
 269   1          //float voltage;
 270   1          int voltage100;
 271   1          unsigned char ge,dianyi,dianer;
 272   1          //voltage=adc_value*0.0196;
 273   1          voltage100=voltage*100;
 274   1          ge=voltage100/100;
 275   1          dianyi=voltage100%100/10;
 276   1          dianer=voltage100%10;
 277   1          
 278   1          dspbuf[0]=22;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;dspbuf[4]=10;
 279   1          dspbuf[5]=(ge+11);dspbuf[6]=dianyi;dspbuf[7]=dianer;
 280   1      }
 281          
 282          void zhunze()
 283          {
 284   1          int voltage_100;
 285   1          unsigned char ge1,dianyi1,dianer1;
 286   1          voltage_100=voltage_standard*100;
 287   1          ge1=voltage_100/100;
 288   1          dianyi1=voltage_100%100/10;
 289   1          dianer1=voltage_100%10;
 290   1        
 291   1          dspbuf[0]=23;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;dspbuf[4]=10;
 292   1          dspbuf[5]=(ge1+11);dspbuf[6]=dianyi1;dspbuf[7]=dianer1;
 293   1      }
 294          
 295          void jishu()
 296          {
 297   1          dspbuf[0]=24;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;dspbuf[4]=10;
 298   1          dspbuf[5]=count/100;
 299   1          dspbuf[6]=count%100/10;
 300   1          dspbuf[7]=count%10;
 301   1      }
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 6   

 302          
 303          
 304          void smg_off()//关闭数码管，暂时的
 305          {
 306   1          dspbuf[0]=10;dspbuf[1]=10;dspbuf[2]=10;dspbuf[3]=10;
 307   1          dspbuf[4]=10;dspbuf[5]=10;dspbuf[6]=10;dspbuf[7]=10;
 308   1      }
 309          
 310          void fen()
 311          {
 312   1          switch(mod)
 313   1          {
 314   2            case 1:deal_adc();break;
 315   2            case 2:zhunze();break;
 316   2            case 3:jishu();break;
 317   2          }
 318   1      }
 319          
 320          void error_led(unsigned char a)
 321          {
 322   1          P2 = ((P2&0x1f)|0x80);
 323   1          switch(a)
 324   1          {
 325   2            case 0:P0 = 0xff;break;
 326   2            case 1:P0 = 0xfe;break;
 327   2            case 2:P0 = 0xfd;break;
 328   2            case 3:P0 = 0xfc;break;
 329   2            case 4:P0 = 0xfb;break;
 330   2            case 5:P0 = 0xfa;break;
 331   2            case 6:P0 = 0xf9;break;
 332   2            case 7:P0 = 0xf8;break;
 333   2          }
 334   1          P2 &= 0x1f;
 335   1      }
 336          
 337          void led_pan()
 338          {
 339   1          if(key_led==1)
 340   1          {
 341   2              if(error>=3&&count%2==0)
 342   2              {key_led=1;key_led+=4;}
 343   2              
 344   2              if(error>=3&&count%2==1)
 345   2              {key_led=1;key_led+=6;}
 346   2              
 347   2              if(error<3&&count%2==0)
 348   2              {key_led=1;}
 349   2              
 350   2              if(error<3&&count%2==1)
 351   2              {key_led=1;key_led+=2;}
 352   2          }
 353   1          else
 354   1          {
 355   2              if(error>=3&&count%2==0)
 356   2              {key_led=0;key_led+=4;}
 357   2              
 358   2              if(error>=3&&count%2==1)
 359   2              {key_led=0;key_led+=6;}
 360   2              
 361   2              if(error<3&&count%2==0)
 362   2              {key_led=0;}
 363   2              
C51 COMPILER V9.60.0.0   HANBERGER                                                         02/07/2023 11:24:46 PAGE 7   

 364   2              if(error<3&&count%2==1)
 365   2              {key_led=0;key_led+=2;}
 366   2          }
 367   1          
 368   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1495    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
