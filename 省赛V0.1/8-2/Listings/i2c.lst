C51 COMPILER V9.60.0.0   I2C                                                               02/25/2023 16:36:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          #include "i2c.h"
   4          
   5          #define DELAY_TIME 5
   6          
   7          /** 定义I2C总线时钟线和数据线 */
   8          sbit scl = P2^0;
   9          sbit sda = P2^1;
  10          
  11          /**
  12          * @brief I2C总线中一些必要的延时
  13          *
  14          * @param[in] i - 延时时间调整.
  15          * @return none
  16          */
  17          void i2c_delay(unsigned char i)
  18          {
  19   1          do
  20   1          {
  21   2              _nop_();
  22   2          }
  23   1          while(i--);        
  24   1      }
  25          
  26          /**
  27          * @brief 产生I2C总线启动条件.
  28          *
  29          * @param[in] none
  30          * @param[out] none
  31          * @return none
  32          */
  33          void i2c_start(void)
  34          {
  35   1          sda = 1;
  36   1          scl = 1;
  37   1          i2c_delay(DELAY_TIME);
  38   1          sda = 0;
  39   1          i2c_delay(DELAY_TIME);
  40   1          scl = 0;    
  41   1      }
  42          
  43          /**
  44          * @brief 产生I2C总线停止条件
  45          *
  46          * @param[in] none
  47          * @param[out] none.
  48          * @return none
  49          */
  50          void i2c_stop(void)
  51          {
  52   1          sda = 0;
  53   1          scl = 1;
  54   1          i2c_delay(DELAY_TIME);
C51 COMPILER V9.60.0.0   I2C                                                               02/25/2023 16:36:40 PAGE 2   

  55   1          sda = 1;
  56   1          i2c_delay(DELAY_TIME);       
  57   1      }
  58          
  59          /**
  60          * @brief I2C发送一个字节的数据
  61          *
  62          * @param[in] byt - 待发送的字节
  63          * @return none
  64          */
  65          void i2c_sendbyte(unsigned char byt)
  66          {
  67   1          unsigned char i;
  68   1      //
  69   1        EA = 0;
  70   1          for(i=0; i<8; i++){
  71   2              scl = 0;
  72   2              i2c_delay(DELAY_TIME);
  73   2              if(byt & 0x80){
  74   3                  sda = 1;
  75   3              }
  76   2              else{
  77   3                  sda = 0;
  78   3              }
  79   2              i2c_delay(DELAY_TIME);
  80   2              scl = 1;
  81   2              byt <<= 1;
  82   2              i2c_delay(DELAY_TIME);
  83   2          }
  84   1        EA = 1;
  85   1      //
  86   1          scl = 0;  
  87   1      }
  88          
  89          /**
  90          * @brief 等待应答
  91          *
  92          * @param[in] none
  93          * @param[out] none
  94          * @return none
  95          */
  96          unsigned char i2c_waitack(void)
  97          {
  98   1        unsigned char ackbit;
  99   1        
 100   1          scl = 1;
 101   1          i2c_delay(DELAY_TIME);
 102   1          ackbit = sda; //while(sda);  //wait ack
 103   1          scl = 0;
 104   1          i2c_delay(DELAY_TIME);
 105   1        
 106   1        return ackbit;
 107   1      }
 108          
 109          /**
 110          * @brief I2C接收一个字节数据
 111          *
 112          * @param[in] none
 113          * @param[out] da
 114          * @return da - 从I2C总线上接收到得数据
 115          */
 116          unsigned char i2c_receivebyte(void)
C51 COMPILER V9.60.0.0   I2C                                                               02/25/2023 16:36:40 PAGE 3   

 117          {
 118   1        unsigned char da;
 119   1        unsigned char i;
 120   1        EA = 0; 
 121   1        for(i=0;i<8;i++){   
 122   2          scl = 1;
 123   2          i2c_delay(DELAY_TIME);
 124   2          da <<= 1;
 125   2          if(sda) 
 126   2            da |= 0x01;
 127   2          scl = 0;
 128   2          i2c_delay(DELAY_TIME);
 129   2        }
 130   1        EA = 1;
 131   1        return da;    
 132   1      }
 133          
 134          /**
 135          * @brief 发送应答
 136          *
 137          * @param[in] ackbit - 设定是否发送应答
 138          * @return - none
 139          */
 140          void i2c_sendack(unsigned char ackbit)
 141          {
 142   1          scl = 0;
 143   1          sda = ackbit;  //0：发送应答信号；1：发送非应答信号
 144   1          i2c_delay(DELAY_TIME);
 145   1          scl = 1;
 146   1          i2c_delay(DELAY_TIME);
 147   1          scl = 0; 
 148   1          sda = 1;
 149   1          i2c_delay(DELAY_TIME);
 150   1      }
 151          
 152          /**
 153          * @brief 读写操作过程中一些必要的延时
 154          *
 155          * @param[in] i - 指定延时时间
 156          * @return - none
 157          */
 158          void operate_delay(unsigned char t)
 159          {
 160   1        unsigned char i;
 161   1        
 162   1        while(t--){
 163   2          for(i=0; i<112; i++);
 164   2        }
 165   1      }
 166          
 167          /**
 168          * @brief PCF8591初始化
 169          *
 170          * @param[in] none
 171          * @param[out] none
 172          * @return none
 173          */
 174          void init_pcf8591(void)
 175          {
 176   1        i2c_start();
 177   1        i2c_sendbyte(0x90);
 178   1        i2c_waitack();
C51 COMPILER V9.60.0.0   I2C                                                               02/25/2023 16:36:40 PAGE 4   

 179   1        i2c_sendbyte(0x03);  //ADC通道3
 180   1        i2c_waitack();
 181   1        i2c_stop();
 182   1        operate_delay(10);
 183   1      }
 184          
 185          /**
 186          * @brief 通过I2C总线读取ADC结果
 187          *
 188          * @param[in] none
 189          * @param[out] temp - AD转换结果
 190          * @return - temp
 191          */
 192          unsigned char adc_pcf8591(void)
 193          {
 194   1        unsigned char temp;
 195   1        
 196   1        i2c_start();             //开始
 197   1        i2c_sendbyte(0x90);      //我告诉你
 198   1        i2c_waitack();           //诶，您说
 199   1        i2c_sendbyte(0x03);      //我要读AIN3的值
 200   1        i2c_waitack();           //诶，好的
 201   1        i2c_stop();              //结束
 202   1        
 203   1        
 204   1        i2c_start();             //开始
 205   1        i2c_sendbyte(0x91);      //照我说的读
 206   1        i2c_waitack();           //诶，好的
 207   1        temp = i2c_receivebyte();//正在读
 208   1        i2c_sendack(1);          //我读完了
 209   1        i2c_stop();              //结束
 210   1        
 211   1        return temp;
 212   1      }
 213          
 214          /**
 215          * @brief DAC输出
 216          *
 217          * @param[in] dat - 输入进行数模转换的数据
 218          * @param[out] none 
 219          * @return - temp
 220          */
 221          void dac_pcf8591(unsigned char dat)
 222          {
 223   1        i2c_start();         //开始
 224   1        i2c_sendbyte(0x90);  //我告诉你
 225   1        i2c_waitack();       //诶，您说
 226   1        i2c_sendbyte(0x40);  //我要输出dac
 227   1        i2c_waitack();       //诶，好的
 228   1        
 229   1        i2c_sendbyte(dat);   //我要输出dat的DAC值
 230   1        i2c_waitack();       //诶，好的
 231   1        i2c_stop();          //结束
 232   1      }
 233          
 234          /**
 235          * @brief 向AT24C02(add)中写入数据val
 236          *
 237          * @param[in] add - AT24C02存储地址
 238          * @param[in] val - 待写入AT24C02相应地址的数据
 239          * @return - none
 240          */
C51 COMPILER V9.60.0.0   I2C                                                               02/25/2023 16:36:40 PAGE 5   

 241          void write_eeprom(unsigned char add,unsigned char val)
 242          {
 243   1          i2c_start();
 244   1          i2c_sendbyte(0xa0);
 245   1          i2c_waitack();
 246   1          i2c_sendbyte(add);
 247   1          i2c_waitack();
 248   1          i2c_sendbyte(val);
 249   1          i2c_waitack();
 250   1          i2c_stop();
 251   1          operate_delay(10);
 252   1      }
 253          
 254          /**
 255          * @brief 从AT24C02(add)中读出数据da
 256          *
 257          * @param[in] add - AT24C02存储地址
 258          * @param[out] da - 从AT24C02相应地址中读取到的数据
 259          * @return - da
 260          */
 261          unsigned char read_eeprom(unsigned char add)
 262          {
 263   1        unsigned char da;
 264   1        
 265   1        i2c_start();
 266   1        i2c_sendbyte(0xa0);
 267   1        i2c_waitack();
 268   1        i2c_sendbyte(add);
 269   1        i2c_waitack();
 270   1        i2c_stop();
 271   1        
 272   1        i2c_start();
 273   1        i2c_sendbyte(0xa1);
 274   1        i2c_waitack();
 275   1        da = i2c_receivebyte();
 276   1        i2c_sendack(1); 
 277   1        i2c_stop();
 278   1        
 279   1        return da;
 280   1      }
 281          
 282          
 283          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
