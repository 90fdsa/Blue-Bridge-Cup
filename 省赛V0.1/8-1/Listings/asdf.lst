C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ASDF
OBJECT MODULE PLACED IN .\Objects\asdf.obj
COMPILER INVOKED BY: D:\study\danpianjixilie\keil\C51\BIN\C51.EXE asdf.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\asdf.lst) TABS(2) OBJECT(.\Objects\asdf.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：矩阵键盘实验
   3          * 实验目的：1.掌握矩阵键盘扫描的基本原理
   4          *           2.掌握按键扫描及消除抖动的基本原理
   5          * 实验配置：J3跳线配置为IO方式，J5配置为KBD、J2配置为1-3和2-4
   6          * 实验现象：按下按键，数码管显示在0~15之间变化
   7          * 硬件说明：IAP15F2K61S2@11.0592MHz
   8          * 程序说明：1.转接板上使用P4.4和P4.2代替P3.6 P3.7
   9          *       2.采用状态法进行按键扫描，系统实时性好，
  10          *       且每10ms扫描可以防止抖动。
  11          * 日期版本：2019-6-24/V2.0
  12          *******************************************************************************/
  13          #include "STC15F2K60S2.H"  //用此头文件直接代替REG52.H，请进行两个头文件对比
  14          #include "absacc.h"
  15          #include "intrins.h"
  16          #include "onewire.h"
  17          
  18          
  19                                     //  0    1    2    3    4    5    6    7    8    9   熄灭
  20          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xFF,0xbf,0xc6};
  21          unsigned char dspbuf[8] = {10,10,10,10,10,10,10,10};  //显示缓冲区
  22          
  23          bit key_flag = 0;//按键扫描标志位                                                                         
             -                 
  24          unsigned char key_value=0xFF;//按键值
  25          char hour=23,minute=59,second=50;//时间
  26          char hours=0,minutes=0,seconds=0;//闹钟时间
  27          char stand,mod=0;
  28          char time=0,order=0;//控制闹钟的变量
  29          char alart=0;
  30          char ordre=0;//控制显示温度的变量
  31          char temper;
  32          /******函数声明***********************/
  33          void read_keyboard(void);
  34          void display();
  35          void how_to_display();
  36          void flow();
  37          void blink(unsigned char a);
  38          void key_proc();
  39          void delay2ms(void);
  40          void alarm();
  41          /************************************/
  42          
  43          void cls_buzz(void) //关闭蜂鸣器
  44          {
  45   1        P2 = (P2&0x1F|0xA0);
  46   1        P0 = 0x00;
  47   1        P2 &= 0x1F;
  48   1      }
  49          
  50          void cls_led(void)//关闭所有LED
  51          {
  52   1          P2 = ((P2&0x1f)|0x80);
  53   1        P0 = 0xff;  
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 2   

  54   1        P2 &= 0x1f;
  55   1      }
  56          
  57          //主函数
  58          void main(void)
  59          {  
  60   1        cls_buzz();
  61   1        cls_led();
  62   1        
  63   1        AUXR |= 0x80; //1T模式，IAP15F2K61S2单片机特殊功能寄存器  
  64   1        TMOD &= 0xF0;
  65   1        TL0 = 0xCD; 
  66   1        TH0 = 0xD4; 
  67   1        TF0 = 0;  
  68   1        TR0 = 1;
  69   1        ET0 = 1;
  70   1        EA = 1;   
  71   1        //init_ds18b20();
  72   1          while(1)
  73   1          {
  74   2            read_keyboard();
  75   2            if(key_value != 0xFF)
  76   2            {key_proc();}
  77   2            alarm();  
  78   2          }
  79   1      }
  80          
  81          //定时器中断服务函数
  82          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  83          {     
  84   1        static unsigned int intr = 0;
  85   1        static unsigned int tem = 0;
  86   1        display(); //1ms执行一次
  87   1        if(++tem==50)
  88   1        {
  89   2          temper=rd_temperature();
  90   2          tem=0;
  91   2        }
  92   1        if(mod==0)
  93   1        {
  94   2          how_to_display();
  95   2          if(++intr == 1000) 
  96   2          {
  97   3            intr = 0;
  98   3            flow();
  99   3            alart=0;
 100   3          }
 101   2        }
 102   1        else if(mod==1)
 103   1        {
 104   2          if(++intr == 1000) 
 105   2          {
 106   3            intr = 0;
 107   3            blink(time);
 108   3          }
 109   2        }
 110   1        else if(mod==2)
 111   1        {
 112   2          if(++intr == 1000) 
 113   2          {
 114   3            intr = 0;
 115   3            blink(time);
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 3   

 116   3          }
 117   2        }
 118   1      }
 119          
 120          //读取矩阵键盘键值:转接板中使用P42和P44代替8051引脚
 121          //顺序中的P36和P37引脚
 122          void read_keyboard(void)
 123          {
 124   1          static unsigned char hang;
 125   1        static unsigned char key_state=0; 
 126   1        switch(key_state)
 127   1        {
 128   2          case 0:
 129   2          {
 130   3            P3 = 0x0f; P42 = 0; P44 = 0;
 131   3            if(P3 != 0x0f) //有按键按下
 132   3            key_state=1;  
 133   3          }break;
 134   2          case 1:
 135   2          {
 136   3            P3 = 0x0f; P42 = 0; P44 = 0;
 137   3            if(P3 != 0x0f) //有按键按下
 138   3            {
 139   4              if(P30 == 0)hang = 1;
 140   4              if(P31 == 0)hang = 2;
 141   4              if(P32 == 0)hang = 3;
 142   4              if(P33 == 0)hang = 4;//确定行     
 143   4              switch(hang){
 144   5                case 1:{P3 = 0xf0; P42 = 1; P44 = 1;
 145   6                  if(P44 == 0) {key_value=0;key_state=2;}
 146   6                  else if(P42 == 0) {key_value=1;key_state=2;}
 147   6                  else if(P35 == 0) {key_value=2;key_state=2;}
 148   6                  else if(P34 == 0) {key_value=3;key_state=2;}
 149   6                }break;
 150   5                case 2:{P3 = 0xf0; P42 = 1; P44 = 1;
 151   6                  if(P44 == 0) {key_value=4;key_state=2;}
 152   6                  else if(P42 == 0) {key_value=5;key_state=2;}
 153   6                  else if(P35 == 0) {key_value=6;key_state=2;}
 154   6                  else if(P34 == 0) {key_value=7;key_state=2;}
 155   6                }break;
 156   5                case 3:{P3 = 0xf0; P42 = 1; P44 = 1;
 157   6                  if(P44 == 0) {key_value=8;key_state=2;}
 158   6                  else if(P42 == 0) {key_value=9;key_state=2;}
 159   6                  else if(P35 == 0) {key_value=10;key_state=2;}
 160   6                  else if(P34 == 0) {key_value=11;key_state=2;}
 161   6                }break;
 162   5                case 4:{P3 = 0xf0; P42 = 1; P44 = 1;
 163   6                  if(P44 == 0) {key_value=12;key_state=2;}
 164   6                  else if(P42 == 0) {key_value=13;key_state=2;}
 165   6                  else if(P35 == 0) {key_value=14;key_state=2;}
 166   6                  else if(P34 == 0) {key_value=15;key_state=2;}
 167   6                }break;
 168   5              } 
 169   4            }
 170   3            else
 171   3            {
 172   4              key_state=0;  
 173   4            }      
 174   3          }break;
 175   2          case 2:     
 176   2          {
 177   3            P3 = 0x0f; P42 = 0; P44 = 0;
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 4   

 178   3            if(P3 == 0x0f) //按键放开
 179   3            key_state=0;  
 180   3          }break;
 181   2                  
 182   2          } 
 183   1        
 184   1      }
 185          
 186          
 187          //显示函数
 188          void display(void)
 189          {   
 190   1        static unsigned char dspcom = 0;
 191   1        P0 = 0xff;
 192   1        P2 = ((P2&0x1f)|0xE0); 
 193   1        P2 &= 0x1f;
 194   1      
 195   1        P0 = 1<<dspcom;
 196   1        P2 = ((P2&0x1f)|0xC0); 
 197   1        P2 &= 0x1f;
 198   1      
 199   1        P0 = tab[dspbuf[dspcom]]; 
 200   1          P2 = ((P2&0x1f)|0xE0); 
 201   1        P2 &= 0x1f;
 202   1        
 203   1          if(++dspcom == 8){
 204   2              dspcom = 0;
 205   2          }    
 206   1      }
 207          
 208          void how_to_display()
 209          {
 210   1        if(ordre==1)
 211   1        {
 212   2          dspbuf[0] = 10;
 213   2          dspbuf[1] = 10;
 214   2          dspbuf[2] = 10;
 215   2          dspbuf[3] = 10;
 216   2          dspbuf[4] = 10;
 217   2          dspbuf[5] = temper/10;
 218   2          dspbuf[6] = temper%10;
 219   2          dspbuf[7] = 12;
 220   2        }
 221   1        else
 222   1        {
 223   2          dspbuf[0] = hour/10;
 224   2          dspbuf[1] = hour%10;
 225   2          dspbuf[2] = 11;
 226   2          dspbuf[3] = minute/10;
 227   2          dspbuf[4] = minute%10;
 228   2          dspbuf[5] = 11;
 229   2          dspbuf[6] = second/10;
 230   2          dspbuf[7] = second%10;
 231   2        }
 232   1        
 233   1      }
 234          
 235          void key_proc()
 236          {
 237   1        static unsigned char teim=0;//控制时间的变量
 238   1        switch(key_value)
 239   1        {
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 5   

 240   2          case 8:
 241   2          {
 242   3            mod=1;
 243   3            switch(teim)
 244   3            {
 245   4              case 0:time=0;teim++;break;
 246   4              case 1:time=1;teim++;break;
 247   4              case 2:time=2;teim++;break;
 248   4              case 3:mod=0;time=0;teim=0;break;
 249   4            }
 250   3            key_value=0xff;alart=1;
 251   3            break;
 252   3          }
 253   2          case 12:
 254   2          {
 255   3            mod=2;
 256   3            switch(teim)
 257   3            {
 258   4              case 0:time=0;teim++;break;
 259   4              case 1:time=1;teim++;break;
 260   4              case 2:time=2;teim++;break;
 261   4              case 3:mod=0;time=0;teim=0;break;
 262   4            }
 263   3            key_value=0xff;alart=1;
 264   3            break;
 265   3          }
 266   2          case 9:
 267   2          {
 268   3            if(mod==1)
 269   3            {
 270   4              switch(time)
 271   4              {
 272   5                case 0:
 273   5                { hour++;
 274   6                  if(hour==24)
 275   6                  {hour=0;}
 276   6                  break;}
 277   5                case 1:
 278   5                { minute++;
 279   6                  if(minute==60)
 280   6                  {minute=0;}
 281   6                  break;}
 282   5                case 2:
 283   5                { second++;
 284   6                  if(second==60)
 285   6                  {second=0;}
 286   6                  break;}
 287   5              }
 288   4            }
 289   3            else if(mod==2)
 290   3            {
 291   4              switch(time)
 292   4              {
 293   5                case 0:
 294   5                { hours++;
 295   6                  if(hours==24)
 296   6                  {hours=0;}
 297   6                  break;}
 298   5                case 1:
 299   5                { minutes++;
 300   6                  if(minutes==60)
 301   6                  {minutes=0;}
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 6   

 302   6                  break;}
 303   5                case 2:
 304   5                { seconds++;
 305   6                  if(seconds==60)
 306   6                  {seconds=0;}
 307   6                  break;}
 308   5              }
 309   4            }
 310   3            key_value=0xff;alart=1;
 311   3            break;
 312   3          }
 313   2          case 13:
 314   2          {
 315   3            if(mod==0)
 316   3            {
 317   4              if(ordre==1)
 318   4              {ordre=0;}
 319   4              else
 320   4              {ordre++;}
 321   4            }
 322   3            if(mod==1)
 323   3            {
 324   4              switch(time)
 325   4              {
 326   5                case 0:
 327   5                { hour--;
 328   6                  if(hour<0)
 329   6                  {hour=23;}
 330   6                  break;}
 331   5                case 1:
 332   5                { minute--;
 333   6                  if(minute<0)
 334   6                  {minute=59;}
 335   6                  break;}
 336   5                case 2:
 337   5                { second--;
 338   6                  if(second<0)
 339   6                  {second=59;}
 340   6                  break;}
 341   5              }
 342   4            }
 343   3            else if(mod==2)
 344   3            {
 345   4              switch(time)
 346   4              {
 347   5                case 0:
 348   5                { hours--;
 349   6                  if(hours<0)
 350   6                  {hours=23;}
 351   6                  break;}
 352   5                case 1:
 353   5                { minutes--;
 354   6                  if(minutes<0)
 355   6                  {minutes=59;}
 356   6                  break;}
 357   5                case 2:
 358   5                { seconds--;
 359   6                  if(seconds<0)
 360   6                  {seconds=59;}
 361   6                  break;}
 362   5              }
 363   4            }
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 7   

 364   3            key_value=0xff;alart=1;
 365   3            break;
 366   3          }
 367   2        }
 368   1      }
 369          void flow()
 370          {
 371   1        second++;
 372   1        if(second==60)
 373   1        {
 374   2          second=0;
 375   2          minute++;
 376   2          if(minute==60)
 377   2          {
 378   3            minute=0;
 379   3            hour++;
 380   3            if(hour==24)
 381   3            {
 382   4              second=0;
 383   4              minute=0;
 384   4              hour=0;
 385   4            }
 386   3          }
 387   2        }
 388   1      }
 389          
 390          void blink(unsigned char a)
 391          {
 392   1        static unsigned char count=0;
 393   1        if(mod==1)
 394   1        {
 395   2          if(a==0)
 396   2          {
 397   3            if(count==0)
 398   3            {
 399   4              dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 400   4              dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 401   4              count++;
 402   4            }
 403   3            else if(count==1)
 404   3            {
 405   4              dspbuf[0] = hour / 10;dspbuf[1] =hour % 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 406   4              dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 407   4              count=0;
 408   4            }
 409   3          }
 410   2          else if(a==1)
 411   2          {
 412   3            if(count==0)
 413   3            {
 414   4              dspbuf[0] = hour / 10;dspbuf[1] = hour % 10;dspbuf[2] = 11;dspbuf[3] = 10;
 415   4              dspbuf[4] = 10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 416   4              count++;
 417   4            }
 418   3            else if(count==1)
 419   3            {
 420   4              dspbuf[0] = hour / 10;dspbuf[1] =hour % 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 421   4              dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 422   4              count=0;
 423   4            }
 424   3          }
 425   2          else if(a==2)
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 8   

 426   2          {
 427   3            if(count==0)
 428   3            {
 429   4              dspbuf[0] = hour / 10;dspbuf[1] = hour % 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 430   4              dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = 10;dspbuf[7] = 10;
 431   4              count++;
 432   4            }
 433   3            else if(count==1)
 434   3            {
 435   4              dspbuf[0] = hour / 10;dspbuf[1] =hour % 10;dspbuf[2] = 11;dspbuf[3] = minute/10;
 436   4              dspbuf[4] = minute%10;dspbuf[5] = 11;dspbuf[6] = second/10;dspbuf[7] = second%10;
 437   4              count=0;
 438   4            }
 439   3          }
 440   2        }
 441   1        if(mod==2)
 442   1        {
 443   2          if(a==0)
 444   2          {
 445   3            if(count==0)
 446   3            {
 447   4              dspbuf[0] = 10;dspbuf[1] = 10;dspbuf[2] = 11;dspbuf[3] = minutes/10;
 448   4              dspbuf[4] = minutes%10;dspbuf[5] = 11;dspbuf[6] = seconds/10;dspbuf[7] = seconds%10;
 449   4              count++;
 450   4            }
 451   3            else if(count==1)
 452   3            {
 453   4              dspbuf[0] = hours / 10;dspbuf[1] =hours % 10;dspbuf[2] = 11;dspbuf[3] = minutes/10;
 454   4              dspbuf[4] = minutes%10;dspbuf[5] = 11;dspbuf[6] = seconds/10;dspbuf[7] = seconds%10;
 455   4              count=0;
 456   4            }
 457   3          }
 458   2          else if(a==1)
 459   2          {
 460   3            if(count==0)
 461   3            {
 462   4              dspbuf[0] = hours / 10;dspbuf[1] = hours % 10;dspbuf[2] = 11;dspbuf[3] = 10;
 463   4              dspbuf[4] = 10;dspbuf[5] = 11;dspbuf[6] = seconds/10;dspbuf[7] = seconds%10;
 464   4              count++;
 465   4            }
 466   3            else if(count==1)
 467   3            {
 468   4              dspbuf[0] = hours / 10;dspbuf[1] =hours % 10;dspbuf[2] = 11;dspbuf[3] = minutes/10;
 469   4              dspbuf[4] = minutes%10;dspbuf[5] = 11;dspbuf[6] = seconds/10;dspbuf[7] = seconds%10;
 470   4              count=0;
 471   4            }
 472   3          }
 473   2          else if(a==2)
 474   2          {
 475   3            if(count==0)
 476   3            {
 477   4              dspbuf[0] = hours / 10;dspbuf[1] = hours % 10;dspbuf[2] = 11;dspbuf[3] = minutes/10;
 478   4              dspbuf[4] = minutes%10;dspbuf[5] = 11;dspbuf[6] = 10;dspbuf[7] = 10;
 479   4              count++;
 480   4            }
 481   3            else if(count==1)
 482   3            {
 483   4              dspbuf[0] = hours / 10;dspbuf[1] =hours % 10;dspbuf[2] = 11;dspbuf[3] = minutes/10;
 484   4              dspbuf[4] = minutes%10;dspbuf[5] = 11;dspbuf[6] = seconds/10;dspbuf[7] = seconds%10;
 485   4              count=0;
 486   4            }
 487   3          }
C51 COMPILER V9.60.0.0   ASDF                                                              01/19/2023 15:49:16 PAGE 9   

 488   2        }
 489   1      }
 490          void alarm()
 491          {
 492   1        char i;
 493   1        if(hour==hours&&minute==minutes&&second==seconds&&alart==0)
 494   1        {
 495   2          for(i=0;i<13;i++)
 496   2          {
 497   3            P2 = ((P2&0x1f)|0x80);
 498   3            P0 = 0xff;  //LED关
 499   3            P2 &= 0x1f;
 500   3            delay2ms();
 501   3              
 502   3            P2 = ((P2&0x1f)|0x80);
 503   3            P0 = 0xfe;  //LED开
 504   3            P2 &= 0x1f;
 505   3            delay2ms();
 506   3          }
 507   2          P2 = ((P2&0x1f)|0x80);
 508   2          P0 = 0xff;  //LED关
 509   2          P2 &= 0x1f;
 510   2        }
 511   1      }
 512          
 513          void delay2ms(void)   //误差 -0.036168981482us
 514          {
 515   1        unsigned char i, j, k;
 516   1      
 517   1        _nop_();
 518   1        _nop_();
 519   1        i = 9;
 520   1        j = 104;
 521   1        k = 139;
 522   1        do
 523   1        {
 524   2          do
 525   2          {
 526   3            while (--k);
 527   3          } while (--j);
 528   2        } while (--i);
 529   1      
 530   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2029    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
